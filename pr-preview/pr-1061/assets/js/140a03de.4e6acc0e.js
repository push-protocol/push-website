"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[52811],{28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>o});var t=a(296540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}},119365:(e,n,a)=>{a.d(n,{A:()=>r});a(296540);var t=a(618215);const s={tabItem:"tabItem_Ymn6"};var i=a(474848);function r(e){let{children:n,hidden:a,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,r),hidden:a,children:n})}},277163:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var t=a(474848),s=a(28453),i=a(411470),r=a(119365);const o={id:"docs-chain-quickstart",title:"Quickstart",hide_title:!0,slug:"./quickstart",displayed_sidebar:"pushChainSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chain--quickstart.png"},l="Quickstart",c={id:"chain/docs-chain-quickstart",title:"Quickstart",description:"Everything you will need to get up and running in 2 minutes or less!",source:"@site/docs/chain/02-Quickstart-Push-Chain.mdx",sourceDirName:"chain",slug:"/chain/quickstart",permalink:"/push-website/pr-preview/pr-1061/docs/chain/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-website/blob/main/docs/chain/02-Quickstart-Push-Chain.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"docs-chain-quickstart",title:"Quickstart",hide_title:!0,slug:"./quickstart",displayed_sidebar:"pushChainSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chain--quickstart.png"},sidebar:"pushChainSidebar",previous:{title:"Intro to Push Chain",permalink:"/push-website/pr-preview/pr-1061/docs/chain/"},next:{title:"Important Concepts",permalink:"/push-website/pr-preview/pr-1061/docs/chain/important-concepts"}},u={},h=[{value:"Installation",id:"installation",level:2},{value:"Import libraries",id:"import-libraries",level:2},{value:"Initialize Push Chain SDK",id:"initialize-push-chain-sdk",level:2},{value:"Send Transaction",id:"send-transaction",level:2},{value:"Get Push Chain Associated Account",id:"get-push-chain-associated-account",level:2},{value:"Get Universal Origin Address (Account controlling Push Chain Associated Account)",id:"get-universal-origin-address-account-controlling-push-chain-associated-account",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components},{Head:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"quickstart",children:"Quickstart"}),"\n",(0,t.jsx)(n.p,{children:"Everything you will need to get up and running in 2 minutes or less!"}),"\n",(0,t.jsx)(a,{children:(0,t.jsx)("title",{children:"Quickstart | Push Chain | Push Documentation"})}),"\n","\n","\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(i.A,{className:"codetabs",groupId:"code-examples",children:[(0,t.jsx)(r.A,{value:"npm",attributes:{className:"codetab npm"},default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"## Install Push Chian core library\nnpm install @pushchain/core\n\n## Install Library for EVM or Solana based on your needs\nnpm install viem @solana/web3.js\n"})})}),(0,t.jsx)(r.A,{value:"yarn",attributes:{className:"codetab yarn"},children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"## Install Push Chian core library\nyarn add @pushchain/core\n\n## Install Library for EVM or Solana based on your needs\nyarn add viem @solana/web3.js\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"import-libraries",children:"Import libraries"}),"\n",(0,t.jsxs)(i.A,{className:"codetabs",groupId:"code-examples",children:[(0,t.jsx)(r.A,{value:"pushchain",attributes:{className:"codetab pushchain"},default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Import Push Chain SDK and Ethers\n// You can use other library like veim, etc\n// THIS EXAMPLE FOLLOWS ETHERS IMPLEMENTATION\nimport { PushChain } from '@pushchain/core';\nimport { ethers } from 'ethers';\n"})})}),(0,t.jsx)(r.A,{value:"ethereum",attributes:{className:"codetab eth"},children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Import Push Chain SDK and Viem\n// You can use other library like ethers, etc\n// THIS EXAMPLE FOLLOWS VIEM IMPLEMENTATION\nimport { PushChain } from '@pushchain/core';\nimport { privateKeyToAccount, generatePrivateKey } from 'viem/accounts';\nimport { createWalletClient } from 'viem';\n"})})}),(0,t.jsx)(r.A,{value:"solana",attributes:{className:"codetab sol"},children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Import Push Chain SDK and Solana Web3.js\n// You can use other library like @solana/kit, etc\n// THIS EXAMPLE FOLLOWS SOLANA WEB3JS IMPLEMENTATION\nimport { PushChain } from '@pushchain/core';\nimport { Keypair } from '@solana/web3.js';\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"initialize-push-chain-sdk",children:"Initialize Push Chain SDK"}),"\n",(0,t.jsxs)(i.A,{className:"codetabs",groupId:"code-examples",children:[(0,t.jsx)(r.A,{value:"pushchain",attributes:{className:"codetab pushchain"},default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// (Inside an async function or top-level-await context)\n// 1. Create a random wallet (or use your own private key)\nconst wallet = ethers.Wallet.createRandom();\n\n// 2. Connect to a provider (e.g., Push Chain RPC URL)\nconst provider = new ethers.JsonRpcProvider('https://evm.pn1.dev.push.org');\nconst signer = wallet.connect(provider);\n\n// 3. Convert ethers signer to Universal Signer\n// Most popular libraries can pass just the signer to get universal signer\n// Or use PushChain.utils.signer.construct to create a custom one\nconst universalSigner = await PushChain.utils.signer.toUniversal(signer);\n\n// Initialize Push Chain SDK for use from Push Chain account\nconst pushChainClient = await PushChain.initialize(universalSigner, {\n  network: PushChain.CONSTANTS.PUSH_NETWORK.TESTNET,\n});\n"})})}),(0,t.jsx)(r.A,{value:"ethereum",attributes:{className:"codetab eth"},children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// (Inside an async function or top-level-await context)\n// 1. Construct account\nconst account = privateKeyToAccount(generatePrivateKey());\n\n// 2. Initialize signer\nconst signer = createWalletClient({\n  transport: http('https://rpc.ankr.com/eth'), // or your preferred RPC URL\n  account,                                     // <-- our signer\n})\n\n// 3. Convert signer to Universal Signer\n// Most of the popular libraries can pass just the signer to get universal signer\n// Or use PushChain.utils.signer.construct to create a custom one\nconst universalSigner = await PushChain.utils.signer.toUniversal(signer);\n\n// Initialize Push Chain SDK for use from Ethereum account\nconst pushChainClient = await PushChain.initialize(universalSigner, {\n  network: PushChain.CONSTANTS.PUSH_NETWORK.TESTNET,\n});\n"})})}),(0,t.jsx)(r.A,{value:"solana",attributes:{className:"codetab sol"},children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// (Inside an async function or top-level-await context)\n// 1. Generate or import your Solana keypair\nconst solKeypair = Keypair.generate();\n\n// 2. Convert the Solana Keypair into a Push Chain universal signer.\n//    We use the helper `toUniversalFromKeyPair`, which internally builds\n//    the necessary adapter (signTransaction, signMessage).\nconst universalSigner = await PushChain.utils.signer.toUniversalFromKeyPair(\n  solKeypair,\n  {\n    chain: PushChain.CONSTANTS.CHAIN.SOLANA_MAINNET,\n    library: PushChain.CONSTANTS.LIBRARY.SOLANA_WEB3JS,\n  }\n);\n\n// 3. Initialize Push Chain SDK\nconst pushChainClient = await PushChain.initialize(universalSigner, {\n  network: PushChain.CONSTANTS.PUSH_NETWORK.TESTNET,\n});\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"send-transaction",children:"Send Transaction"}),"\n",(0,t.jsx)(i.A,{className:"codetabs",groupId:"code-examples",children:(0,t.jsx)(r.A,{value:"pushchain",attributes:{className:"codetab js"},default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// ONCE PUSH CHAIN CLIENT IS INITIALIZED\n// ALL CHAIN IMPLEMENTATION BECOMES UNIVERSAL\n\n// (Inside an async function or top-level-await context)\n// Send a universal transaction (from any chain to Push Chain)\nconst txHash = await pushChainClient.universal.sendTransaction({\n  to: '0xD0DE00000447492307108Bdc7Ff6BaB33Ff37Dacc479', // To address on Push Chain\n  value: BigInt(0), // $PC Value to send\n});\n\nconsole.log('Transaction sent:', txHash);\n"})})})}),"\n",(0,t.jsx)(n.h2,{id:"get-push-chain-associated-account",children:"Get Push Chain Associated Account"}),"\n",(0,t.jsx)(i.A,{className:"codetabs",groupId:"code-examples",children:(0,t.jsx)(r.A,{value:"pushchain",attributes:{className:"codetab js"},default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// ONCE PUSH CHAIN CLIENT IS INITIALIZED\n// ALL CHAIN IMPLEMENTATION BECOMES UNIVERSAL\n\n// Get the account that is connected to Push Chain Client\nconst pushChainAccount = pushChainClient.universal.account\nconsole.log('Account connected to Push Chain Client:', ueaAccount.address);\n"})})})}),"\n",(0,t.jsx)(n.h2,{id:"get-universal-origin-address-account-controlling-push-chain-associated-account",children:"Get Universal Origin Address (Account controlling Push Chain Associated Account)"}),"\n",(0,t.jsx)(i.A,{className:"codetabs",groupId:"code-examples",children:(0,t.jsx)(r.A,{value:"pushchain",attributes:{className:"codetab js"},default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// ONCE PUSH CHAIN CLIENT IS INITIALIZED\n// ALL CHAIN IMPLEMENTATION BECOMES UNIVERSAL\n\n// Get the account that is connected to Push Chain Client\nconst originAccount = pushChainClient.universal.account\nconsole.log('Origin address that is controlling the account connected to Push Chain Client');\nconsole.log('Origin address is only present if other chains address is connected to Push Chain Client');\nconsole.log('Else it will be the same as pushChainClient.universal.account');\nconsole.log('Origin address:', originAccount.address);\n"})})})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},411470:(e,n,a)=>{a.d(n,{A:()=>x});var t=a(296540),s=a(618215),i=a(823104),r=a(956347),o=a(300205),l=a(757485),c=a(231682),u=a(289466);function h(e){var n,a;return null!==(n=null===(a=t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===a?void 0:a.filter(Boolean))&&void 0!==n?n:[]}function d(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=null!=n?n:function(e){return h(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:s}}=e;return{value:n,label:a,attributes:t,default:s}}))}(a);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,a])}function p(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:a}=e;const s=(0,r.W6)(),i=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,l.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace(Object.assign({},s.location,{search:n.toString()}))}),[i,s])]}function b(e){const{defaultValue:n,queryString:a=!1,groupId:s}=e,i=d(e),[r,l]=(0,t.useState)((()=>function(e){var n;let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!p({value:a,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+t.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}const s=null!==(n=t.find((e=>e.default)))&&void 0!==n?n:t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i}))),[c,h]=m({queryString:a,groupId:s}),[b,g]=function(e){let{groupId:n}=e;const a=function(e){return e?"docusaurus.tab."+e:null}(n),[s,i]=(0,u.Dv)(a);return[s,(0,t.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:s}),v=(()=>{const e=null!=c?c:b;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{v&&l(v)}),[v]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);l(e),h(e),g(e)}),[h,g,i]),tabValues:i}}var g=a(992303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var C=a(474848);function f(e){let{className:n,block:a,selectedValue:t,selectValue:r,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),u=e=>{const n=e.currentTarget,a=l.indexOf(n),s=o[a].value;s!==t&&(c(n),r(s))},h=e=>{var n;let a=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var t;const n=l.indexOf(e.currentTarget)+1;a=null!==(t=l[n])&&void 0!==t?t:l[0];break}case"ArrowLeft":{var s;const n=l.indexOf(e.currentTarget)-1;a=null!==(s=l[n])&&void 0!==s?s:l[l.length-1];break}}null===(n=a)||void 0===n||n.focus()};return(0,C.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},n),children:o.map((e=>{let{value:n,label:a,attributes:i}=e;return(0,C.jsx)("li",Object.assign({role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:h,onClick:u},i,{className:(0,s.A)("tabs__item",v.tabItem,null==i?void 0:i.className,{"tabs__item--active":t===n}),children:null!=a?a:n}),n)}))})}function I(e){let{lazy:n,children:a,selectedValue:s}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,C.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function N(e){const n=b(e);return(0,C.jsxs)("div",{className:(0,s.A)("tabs-container",v.tabList),children:[(0,C.jsx)(f,Object.assign({},e,n)),(0,C.jsx)(I,Object.assign({},e,n))]})}function x(e){const n=(0,g.A)();return(0,C.jsx)(N,Object.assign({},e,{children:h(e.children)}),String(n))}}}]);