"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[15127],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(296540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},119365:(e,n,t)=>{t.d(n,{A:()=>s});t(296540);var r=t(618215);const o={tabItem:"tabItem_Ymn6"};var i=t(474848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,s),hidden:t,children:n})}},162334:(e,n,t)=>{t.d(n,{A:()=>d});var r=t(175489),o=t(954537),i=t(751107),s=t(119365),a=t(411470),l=(t(296540),t(474848));const c={chainId:42101,chainName:"Push Chain Testnet",nativeCurrency:{name:"Push Chain",symbol:"PC",decimals:18},rpcUrls:["https://evm.rpc-testnet-donut-node1.push.org/","https://evm.rpc-testnet-donut-node1.push.org/"],iconUrls:[],blockExplorerUrls:["https://explorer.testnet.push.org"]},d=()=>(0,l.jsxs)(a.A,{groupId:"chain-network",values:[{value:"testnet_donut",label:"\ud83c\udf69 Donut Testnet",default:!0},{value:"mainnet",label:"Mainnet - Coming Soon \ud83d\ude80"}],children:[(0,l.jsxs)(s.A,{value:"testnet_donut",children:[(0,l.jsxs)("table",{children:[(0,l.jsx)("thead",{children:(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"Field"}),(0,l.jsx)("th",{children:"Value"})]})}),(0,l.jsxs)("tbody",{children:[(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("strong",{children:"Network Name"})}),(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:"Push Chain Donut Testnet"})})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("strong",{children:"RPC URL"})}),(0,l.jsxs)("td",{children:[(0,l.jsx)("code",{children:"https://evm.rpc-testnet-donut-node1.push.org/"}),", ",(0,l.jsx)("code",{children:"https://evm.rpc-testnet-donut-node2.push.org/"})]})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("strong",{children:"Chain ID"})}),(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:"42101"})})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("strong",{children:"Currency Symbol"})}),(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:"PC"})})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)("strong",{children:"Block Explorer URL"})}),(0,l.jsx)("td",{children:(0,l.jsx)("code",{children:"https://explorer.testnet.push.org"})})]})]})]}),(0,l.jsx)(o.A,{title:"Add to Wallet (Testnet Donut)",config:c})]}),(0,l.jsx)(s.A,{value:"mainnet",children:(0,l.jsxs)("div",{className:"admonition admonition-info alert alert--info",children:[(0,l.jsx)("div",{className:"admonition-heading",children:(0,l.jsx)(i.A,{as:"h5",children:"Coming Soon!"})}),(0,l.jsxs)("div",{className:"admonition-content",children:[(0,l.jsx)("p",{children:"Push Chain Mainnet is currently in development. Stay tuned for updates!"}),(0,l.jsxs)("ul",{children:[(0,l.jsxs)("li",{children:["Follow us on ",(0,l.jsx)(r.A,{to:"https://x.com/pushchain",children:"X"})," for announcements"]}),(0,l.jsxs)("li",{children:["Join our"," ",(0,l.jsx)(r.A,{to:"https://discord.gg/pushprotocol",children:"Discord"})," to be part of the community"]})]})]})]})})]})},327128:(e,n,t)=>{t.d(n,{A:()=>i});var r=t(296540),o=t(474848);function i(e){let{examples:n={}}=e;const t=Object.keys(n),i="https://remix.ethereum.org",[s,a]=(0,r.useState)(t[0]||null),[l,c]=(0,r.useState)(!1),[d,u]=(0,r.useState)(!0);return(0,r.useEffect)((()=>(document.body.style.overflow=l?"hidden":"auto",()=>{document.body.style.overflow="auto"})),[l]),(0,o.jsxs)("div",{style:{width:"100%",backgroundColor:"#fff",borderRadius:"12px",border:"1px solid rgb(226, 232, 240)",overflow:"hidden",position:l?"fixed":"relative",top:l?0:"auto",left:l?0:"auto",right:l?0:"auto",bottom:l?0:"auto",zIndex:l?9999:1},children:[(0,o.jsx)("style",{children:"\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      "}),(0,o.jsxs)("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",padding:"10px 15px",borderBottom:"1px solid rgb(226, 232, 240)",backgroundColor:"#f8fafc"},children:[(0,o.jsx)("div",{style:{fontSize:"16px",fontWeight:500,color:"#475569"},children:"Remix IDE"}),(0,o.jsxs)("div",{style:{display:"flex",gap:"10px",alignItems:"center"},children:[t.length>0&&(0,o.jsx)("select",{value:null!=s?s:"",onChange:e=>a(e.target.value),style:{padding:"8px 12px",fontSize:"14px",borderRadius:"6px",border:"1px solid rgb(226, 232, 240)",backgroundColor:"#fff",color:"#475569",cursor:"pointer"},children:t.map((e=>(0,o.jsx)("option",{value:e,children:e},e)))}),(0,o.jsx)("button",{onClick:()=>c(!l),style:{padding:"8px 12px",fontSize:"14px",borderRadius:"6px",border:"1px solid rgb(226, 232, 240)",backgroundColor:"#fff",color:"#475569",cursor:"pointer",display:"flex",alignItems:"center",gap:"6px"},children:l?"Exit Fullscreen":"Enter Fullscreen"})]})]}),(0,o.jsxs)("div",{style:{width:"100%",height:l?"calc(100vh - 56px)":"600px",position:"relative"},children:[(0,o.jsx)("iframe",{src:(()=>{if(!s||!n[s])return i;const e=n[s],t=new URL(i);return t.hash="url="+e,t.toString()})(),title:"Remix IDE",style:{width:"100%",height:"100%",border:"none",position:"relative",zIndex:1},allowFullScreen:!0,onLoad:()=>u(!1)}),d&&(0,o.jsx)("div",{style:{position:"absolute",top:0,left:0,right:0,bottom:0,display:"flex",alignItems:"center",justifyContent:"center",backgroundColor:"rgba(255, 255, 255, 0.8)",zIndex:2},children:(0,o.jsx)("div",{style:{width:"40px",height:"40px",border:"3px solid #D548EC",borderTop:"3px solid transparent",borderRadius:"50%",animation:"spin 1s linear infinite"}})})]})]})}},411470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(296540),o=t(618215),i=t(823104),s=t(956347),a=t(300205),l=t(757485),c=t(231682),d=t(289466);function u(e){var n,t;return null!==(n=null===(t=r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===t?void 0:t.filter(Boolean))&&void 0!==n?n:[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:o}}=e;return{value:n,label:t,attributes:r,default:o}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const o=(0,s.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(o.location.search);n.set(i,e),o.replace(Object.assign({},o.location,{search:n.toString()}))}),[i,o])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,i=h(e),[s,l]=(0,r.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const o=null!==(n=r.find((e=>e.default)))&&void 0!==n?n:r[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:i}))),[c,u]=m({queryString:t,groupId:o}),[x,f]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[o,i]=(0,d.Dv)(t);return[o,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:o}),y=(()=>{const e=null!=c?c:x;return p({value:e,tabValues:i})?e:null})();(0,a.A)((()=>{y&&l(y)}),[y]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),f(e)}),[u,f,i]),tabValues:i}}var f=t(992303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(474848);function j(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),o=a[t].value;o!==r&&(c(n),s(o))},u=e=>{var n;let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var r;const n=l.indexOf(e.currentTarget)+1;t=null!==(r=l[n])&&void 0!==r?r:l[0];break}case"ArrowLeft":{var o;const n=l.indexOf(e.currentTarget)-1;t=null!==(o=l[n])&&void 0!==o?o:l[l.length-1];break}}null===(n=t)||void 0===n||n.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,g.jsx)("li",Object.assign({role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:u,onClick:d},i,{className:(0,o.A)("tabs__item",y.tabItem,null==i?void 0:i.className,{"tabs__item--active":r===n}),children:null!=t?t:n}),n)}))})}function v(e){let{lazy:n,children:t,selectedValue:o}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function b(e){const n=x(e);return(0,g.jsxs)("div",{className:(0,o.A)("tabs-container",y.tabList),children:[(0,g.jsx)(j,Object.assign({},e,n)),(0,g.jsx)(v,Object.assign({},e,n))]})}function w(e){const n=(0,f.A)();return(0,g.jsx)(b,Object.assign({},e,{children:u(e.children)}),String(n))}},891874:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var r=t(474848),o=t(28453),i=(t(411470),t(119365),t(162334),t(327128));const s={id:"docs-chain-setup-tooling-smart-contract-env",title:"Smart Contract Environment",hide_title:!0,slug:"./smart-contract-environment",displayed_sidebar:"pushChainSidebar",sidebar_position:4,image:"/assets/docs/previews/docs_chain_setup_tooling_smart_contract_env--smart_contract_environment.png"},a="Overview",l={id:"chain/setup/tooling/docs-chain-setup-tooling-smart-contract-env",title:"Smart Contract Environment",description:"This page covers the setup of your smart contract environment to interact with Push Chain. Whether you are using Remix, Hardhat, Foundry, or any other tooling, this page will guide you through the process.",source:"@site/docs/chain/01-setup/01-tooling/04-Smart-Contract-Environment.mdx",sourceDirName:"chain/01-setup/01-tooling",slug:"/chain/setup/tooling/smart-contract-environment",permalink:"/push-website/pr-preview/pr-1061/docs/chain/setup/tooling/smart-contract-environment",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-website/blob/main/docs/chain/01-setup/01-tooling/04-Smart-Contract-Environment.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"docs-chain-setup-tooling-smart-contract-env",title:"Smart Contract Environment",hide_title:!0,slug:"./smart-contract-environment",displayed_sidebar:"pushChainSidebar",sidebar_position:4,image:"/assets/docs/previews/docs_chain_setup_tooling_smart_contract_env--smart_contract_environment.png"},sidebar:"pushChainSidebar",previous:{title:"Block Explorer",permalink:"/push-website/pr-preview/pr-1061/docs/chain/setup/tooling/block-explorer"},next:{title:"Chain Configuration",permalink:"/push-website/pr-preview/pr-1061/docs/chain/setup/chain-config"}},c={},d=[{value:"Deploying and Working with Remix",id:"deploying-and-working-with-remix",level:2},{value:"Setting up Local Dev Environment",id:"setting-up-local-dev-environment",level:2},{value:"Deploying with Foundry",id:"deploying-with-foundry",level:2},{value:"1. Install Foundry",id:"1-install-foundry",level:3},{value:"2. Create a New Project",id:"2-create-a-new-project",level:3},{value:"3. Configure for Push Chain",id:"3-configure-for-push-chain",level:3},{value:"4. Write a Smart Contract",id:"4-write-a-smart-contract",level:3},{value:"5. Compile the Contract",id:"5-compile-the-contract",level:3},{value:"6. Deploy to Push Chain",id:"6-deploy-to-push-chain",level:3},{value:"6.1. Set up your deployer account",id:"61-set-up-your-deployer-account",level:4},{value:"6.2. Get testnet tokens",id:"62-get-testnet-tokens",level:4},{value:"6.3. Deploy your contract",id:"63-deploy-your-contract",level:4},{value:"7. Verify the Contract",id:"7-verify-the-contract",level:3},{value:"Deploying with Hardhat",id:"deploying-with-hardhat",level:2},{value:"1. Install Hardhat",id:"1-install-hardhat",level:3},{value:"2. Create a New Project",id:"2-create-a-new-project-1",level:3},{value:"3. Configure for Push Chain",id:"3-configure-for-push-chain-1",level:3},{value:"4. Write a Smart Contract",id:"4-write-a-smart-contract-1",level:3},{value:"5. Compile the Contract",id:"5-compile-the-contract-1",level:3},{value:"6. Deploy to Push Chain",id:"6-deploy-to-push-chain-1",level:3},{value:"6.1. Set up your deployer account",id:"61-set-up-your-deployer-account-1",level:4},{value:"6.2. Get testnet tokens",id:"62-get-testnet-tokens-1",level:4},{value:"6.3. Deploy your contract",id:"63-deploy-your-contract-1",level:4},{value:"7. Verify the Contract",id:"7-verify-the-contract-1",level:3}];function u(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"This page covers the setup of your smart contract environment to interact with Push Chain. Whether you are using Remix, Hardhat, Foundry, or any other tooling, this page will guide you through the process."}),"\n",(0,r.jsx)(t,{children:(0,r.jsx)("title",{children:"Smart Contract Environment | Tooling | Setup | Push Chain | Push Documentation"})}),"\n","\n","\n",(0,r.jsx)(n.h2,{id:"deploying-and-working-with-remix",children:"Deploying and Working with Remix"}),"\n",(0,r.jsxs)(n.p,{children:["Remix is an IDE tool provided by Ethereum to enable EVM smart contract development. If you have already added ",(0,r.jsx)(n.a,{href:"/docs/chain/setup/tooling/wallet-setup",title:"Documentation to add Push Chain as custom network in any third party wallet",children:"Push Chain config"})," to your wallet, you can use Remix to debug or deploy your smart contracts on Push Chain Testnet or Mainnet."]}),"\n",(0,r.jsx)(i.A,{examples:{"Counter.sol":"https://github.com/push-protocol/push-chain-examples/blob/main/contracts/hello-world/src/Counter.sol"}}),"\n",(0,r.jsx)(n.h2,{id:"setting-up-local-dev-environment",children:"Setting up Local Dev Environment"}),"\n",(0,r.jsx)(n.p,{children:"You can use any EVM tooling including Foundry or Hardhat to deploy your smart contracts."}),"\n",(0,r.jsx)(n.admonition,{title:"Recommended Practice",type:"info",children:(0,r.jsx)(n.p,{children:"Work on your smart contract exactly the same way you would on Ethereum, then use Push Chain configuration to deploy your smart contracts on Push Chain."})}),"\n",(0,r.jsx)(n.h2,{id:"deploying-with-foundry",children:"Deploying with Foundry"}),"\n",(0,r.jsx)(n.p,{children:"Foundry is a blazing fast, portable, and modular toolkit for Ethereum application development."}),"\n",(0,r.jsx)(n.h3,{id:"1-install-foundry",children:"1. Install Foundry"}),"\n",(0,r.jsx)(n.p,{children:"To install Foundry, run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -L https://foundry.paradigm.xyz | bash\n"})}),"\n",(0,r.jsx)(n.p,{children:"Once the foundryup script is downloaded, follow the on-screen instructions to complete installation. After installation, restart your terminal and run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"foundryup\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will ensure you have the latest version of Foundry tools (forge, cast, anvil, and chisel) installed."}),"\n",(0,r.jsx)(n.h3,{id:"2-create-a-new-project",children:"2. Create a New Project"}),"\n",(0,r.jsx)(n.p,{children:"Create a new Foundry project:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"forge init myToken\ncd myToken\n"})}),"\n",(0,r.jsx)(n.p,{children:"Install the OpenZeppelin contracts:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"forge install OpenZeppelin/openzeppelin-contracts\n"})}),"\n",(0,r.jsx)(n.p,{children:"This should create a new project with the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"myToken/\n\u251c\u2500\u2500 foundry.toml\n\u251c\u2500\u2500 lib/\n\u251c\u2500\u2500 out/\n\u251c\u2500\u2500 script/\n\u251c\u2500\u2500 src/\n\u251c\u2500\u2500 test/\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-configure-for-push-chain",children:"3. Configure for Push Chain"}),"\n",(0,r.jsxs)(n.p,{children:["Now simply modify your ",(0,r.jsx)(n.code,{children:"foundry.toml"})," file to include Push Chain testnet configuration:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[profile.default]\nsrc = "src"\nout = "out"\nlibs = ["lib"]\nremappings = ["@openzeppelin/=lib/openzeppelin-contracts/"]\n\n# Push Chain Testnet configuration\n[rpc_endpoints]\npush_testnet = "https://evm.rpc-testnet-donut-node1.push.org/"\npush_testnet_alt = "https://evm.rpc-testnet-donut-node2.push.org/"\n\n# This is a placeholder - BlockScout doesn\'t require an API key but Foundry expects a key field\n[etherscan]\npush_testnet = { key = "blockscout", url = "https://explorer.testnet.push.org/api", chain = 42101 }\n\n# See more config options https://github.com/foundry-rs/foundry/blob/master/crates/config/README.md#all-options\n'})}),"\n",(0,r.jsx)(n.p,{children:"This configuration includes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default project structure settings"}),"\n",(0,r.jsx)(n.li,{children:"RPC endpoints for Push Chain Donut testnet"}),"\n",(0,r.jsx)(n.li,{children:"BlockScout explorer configuration for contract verification"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-write-a-smart-contract",children:"4. Write a Smart Contract"}),"\n",(0,r.jsxs)(n.p,{children:["Create a new file at ",(0,r.jsx)(n.code,{children:"src/MyToken.sol"})," with the following ERC20 token implementation:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\nimport "@openzeppelin/contracts/token/ERC20/ERC20.sol";\nimport "@openzeppelin/contracts/access/Ownable.sol";\n\n/**\n * @title MyToken\n * @dev A simple ERC20 token for demonstration on PUSH CHAIN\n */\ncontract MyToken is ERC20, Ownable {\n    constructor() ERC20("MyToken", "MT") Ownable(msg.sender) {\n        _mint(msg.sender, 1000 * 10**18);\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"5-compile-the-contract",children:"5. Compile the Contract"}),"\n",(0,r.jsx)(n.p,{children:"Compile your contract with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"forge build\n"})}),"\n",(0,r.jsx)(n.p,{children:"If successful, you should see output similar to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[\u2822] Compiling...\n[\u2814] Compiling 18 files with 0.8.22\n[\u2811] Solc 0.8.22 finished in 1.51s\nCompiler run successful!\n"})}),"\n",(0,r.jsx)(n.h3,{id:"6-deploy-to-push-chain",children:"6. Deploy to Push Chain"}),"\n",(0,r.jsx)(n.h4,{id:"61-set-up-your-deployer-account",children:"6.1. Set up your deployer account"}),"\n",(0,r.jsx)(n.p,{children:"Following best security practices, we'll use Foundry's wallet management system instead of exposing private keys in environment variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cast wallet import myKeystore --interactive\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You'll be prompted to enter your private key and create a password to encrypt it. This securely stores your key in ",(0,r.jsx)(n.code,{children:"~/.foundry/keystores"}),".\nRead more about ",(0,r.jsx)(n.a,{href:"https://getfoundry.sh/cast/reference/cast-wallet-import/",children:"Foundry Wallet Management"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"Never use accounts with significant funds for test deployments.\nNever store private keys in plain text or in your repository."})}),"\n",(0,r.jsx)(n.h4,{id:"62-get-testnet-tokens",children:"6.2. Get testnet tokens"}),"\n",(0,r.jsxs)(n.p,{children:["Ensure you have testnet tokens to pay for deployment gas fees. If you don't have any, use the Push Chain testnet faucet**.**\nVisiting our ",(0,r.jsx)(n.a,{href:"https://faucet.push.org/",children:"Faucet"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"63-deploy-your-contract",children:"6.3. Deploy your contract"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"forge create src/MyToken.sol:MyToken --rpc-url push_testnet --chain 42101 --account myKeystore --broadcast\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creates your MyToken contract"}),"\n",(0,r.jsx)(n.li,{children:"Uses the Push Chain testnet RPC"}),"\n",(0,r.jsx)(n.li,{children:"Specifies the correct chain ID (42101)"}),"\n",(0,r.jsx)(n.li,{children:"Uses your securely stored account"}),"\n",(0,r.jsx)(n.li,{children:"Broadcasts the transaction to the network"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Deployment Results:"})}),"\n",(0,r.jsx)(n.p,{children:"If successful, you'll see output similar to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Deployer: 0xa89523351BE1e2De64937AA9AF61Ae06eAd199C7\nDeployed to: 0xF0f1199A048A39336dFD915F146470de1b5d6dAd\nTransaction hash: 0x255e64bbe86253979f070b48db0868f6f108a47e7b7f94586bc869fbd2d98800\n"})}),"\n",(0,r.jsx)(n.p,{children:"Save the contract address for verification and interaction later."}),"\n",(0,r.jsx)(n.h3,{id:"7-verify-the-contract",children:"7. Verify the Contract"}),"\n",(0,r.jsx)(n.p,{children:"Verify your contract on the Push Chain BlockScout explorer:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"forge verify-contract --chain 42101 --verifier blockscout --verifier-url https://explorer.testnet.push.org/api 0xF0f1199A048A39336dFD915F146470de1b5d6dAd src/MyToken.sol:MyToken\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Replace ",(0,r.jsx)(n.code,{children:"0xF0f1199A048A39336dFD915F146470de1b5d6dAd"})," with your actual deployed contract address."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If successful, you'll see output similar to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Start verifying contract `0xF0f1199A048A39336dFD915F146470de1b5d6dAd` deployed on 42101\n\nSubmitting verification for [src/MyToken.sol:MyToken] 0xF0f1199A048A39336dFD915F146470de1b5d6dAd.\nSubmitted contract for verification:\n\tResponse: `OK`\n\tGUID: `f0f1199a048a39336dfd915f146470de1b5d6dad68494bd5`\n\tURL: https://explorer.testnet.push.org/address/0xf0f1199a048a39336dfd915f146470de1b5d6dad\n"})}),"\n",(0,r.jsx)(n.p,{children:"Visit the provided URL to view your verified contract on the Push Chain explorer."}),"\n",(0,r.jsx)(n.p,{children:"That's it! You have successfully deployed and verified your smart contract on Push Chain."}),"\n",(0,r.jsx)(n.h2,{id:"deploying-with-hardhat",children:"Deploying with Hardhat"}),"\n",(0,r.jsx)(n.p,{children:"Hardhat is another popular development environment for Ethereum software, designed for professionals that need a flexible and extensible tool."}),"\n",(0,r.jsx)(n.h3,{id:"1-install-hardhat",children:"1. Install Hardhat"}),"\n",(0,r.jsx)(n.p,{children:"First, create a new directory for your project and initialize it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir myToken\ncd myToken\nnpm init -y\n"})}),"\n",(0,r.jsx)(n.p,{children:"Install Hardhat and required dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install --save-dev hardhat @nomicfoundation/hardhat-toolbox @nomicfoundation/hardhat-verify dotenv @openzeppelin/contracts\n"})}),"\n",(0,r.jsx)(n.p,{children:"This installs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Hardhat core framework"}),"\n",(0,r.jsx)(n.li,{children:"Hardhat toolbox with common plugins"}),"\n",(0,r.jsx)(n.li,{children:"Hardhat verify for contract verification"}),"\n",(0,r.jsx)(n.li,{children:"dotenv for environment variable management"}),"\n",(0,r.jsx)(n.li,{children:"OpenZeppelin contracts library"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-create-a-new-project-1",children:"2. Create a New Project"}),"\n",(0,r.jsx)(n.p,{children:"Initialize a new Hardhat project:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx hardhat init\n"})}),"\n",(0,r.jsx)(n.p,{children:'Select "Create a JavaScript project" when prompted. This will create a basic project structure:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"myToken/\n\u251c\u2500\u2500 contracts/\n\u251c\u2500\u2500 scripts/\n\u251c\u2500\u2500 test/\n\u251c\u2500\u2500 hardhat.config.js\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 node_modules/\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-configure-for-push-chain-1",children:"3. Configure for Push Chain"}),"\n",(0,r.jsxs)(n.p,{children:["Update your ",(0,r.jsx)(n.code,{children:"hardhat.config.js"})," file to include Push Chain testnet configuration:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'require("@nomicfoundation/hardhat-toolbox");\nrequire("@nomicfoundation/hardhat-verify");\nrequire("dotenv").config();\n\n/** @type import(\'hardhat/config\').HardhatUserConfig */\nmodule.exports = {\n  solidity: {\n    version: "0.8.22",\n    settings: {\n      optimizer: {\n        enabled: true,\n        runs: 200\n      }\n    }\n  },\n  networks: {\n    push_testnet: {\n      url: "https://evm.rpc-testnet-donut-node1.push.org/",\n      chainId: 42101,\n      accounts: [process.env.PRIVATE_KEY],\n    },\n    push_testnet_alt: {\n      url: "https://evm.rpc-testnet-donut-node2.push.org/",\n      chainId: 42101,\n      accounts: [process.env.PRIVATE_KEY],\n    }\n  },\n  etherscan: {\n    apiKey: {\n      // Blockscout doesn\'t require an actual API key, any non-empty string will work\n      push_testnet: "blockscout"\n    },\n    customChains: [\n      {\n        network: "push_testnet",\n        chainId: 42101,\n        urls: {\n          apiURL: "https://explorer.testnet.push.org/api/v2/verifyContract",\n          browserURL: "https://explorer.testnet.push.org/"\n        }\n      }\n    ]\n  },\n  sourcify: {\n    // Disable sourcify for manual verification\n    enabled: false\n  },\n  paths: {\n    sources: "./contracts",\n    tests: "./test",\n    cache: "./cache",\n    artifacts: "./artifacts"\n  },\n  mocha: {\n    timeout: 40000\n  }\n};\n'})}),"\n",(0,r.jsx)(n.p,{children:"This configuration includes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Solidity compiler version and optimization settings"}),"\n",(0,r.jsx)(n.li,{children:"Push Chain testnet RPC endpoints"}),"\n",(0,r.jsx)(n.li,{children:"Blockscout integration for contract verification"}),"\n",(0,r.jsx)(n.li,{children:"Project structure paths"}),"\n",(0,r.jsx)(n.li,{children:"Test configuration"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-write-a-smart-contract-1",children:"4. Write a Smart Contract"}),"\n",(0,r.jsxs)(n.p,{children:["Create a file at ",(0,r.jsx)(n.code,{children:"contracts/MyToken.sol"})," with this ERC20 token implementation:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\nimport "@openzeppelin/contracts/token/ERC20/ERC20.sol";\nimport "@openzeppelin/contracts/access/Ownable.sol";\n\n/**\n * @title MyToken\n * @dev A simple ERC20 token for demonstration on PUSH CHAIN\n */\ncontract MyToken is ERC20, Ownable {\n    constructor() ERC20("MyToken", "MT") Ownable(msg.sender) {\n        _mint(msg.sender, 1000 * 10**18);\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev Allows the owner to mint new tokens\n     * @param to The address that will receive the minted tokens.\n     * @param amount The amount of tokens to mint.\n     */\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"5-compile-the-contract-1",children:"5. Compile the Contract"}),"\n",(0,r.jsx)(n.p,{children:"Compile your contract with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx hardhat compile\n"})}),"\n",(0,r.jsx)(n.p,{children:"If successful, you should see output indicating compilation was successful:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Compiling 12 files with 0.8.22\nSolidity compilation finished successfully\n"})}),"\n",(0,r.jsx)(n.h3,{id:"6-deploy-to-push-chain-1",children:"6. Deploy to Push Chain"}),"\n",(0,r.jsx)(n.h4,{id:"61-set-up-your-deployer-account-1",children:"6.1. Set up your deployer account"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:".env"})," file in your project root to securely store your private key:"]}),"\n",(0,r.jsxs)(n.p,{children:["Then create a deployment script at ",(0,r.jsx)(n.code,{children:"scripts/deploy.js"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const hre = require("hardhat");\n\nasync function main() {\n  console.log("Deploying MyToken to PUSH Chain...");\n\n  const myToken = await hre.ethers.deployContract("MyToken");\n  await myToken.waitForDeployment();\n\n  const address = await myToken.getAddress();\n  console.log(`MyToken deployed to: ${address}`);\n}\n\n// We recommend this pattern to be able to use async/await everywhere\n// and properly handle errors.\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1;\n}); \n'})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"Never commit your .env file to version control.\nAdd .env to your .gitignore file to prevent accidental exposure of private keys.\nNever use accounts with significant funds for test deployments."})}),"\n",(0,r.jsx)(n.h4,{id:"62-get-testnet-tokens-1",children:"6.2. Get testnet tokens"}),"\n",(0,r.jsxs)(n.p,{children:["Ensure you have testnet tokens to pay for deployment gas fees. If you don't have any, visit the ",(0,r.jsx)(n.a,{href:"https://faucet.push.org/",children:"Push Chain Faucet"})," to request test tokens."]}),"\n",(0,r.jsx)(n.h4,{id:"63-deploy-your-contract-1",children:"6.3. Deploy your contract"}),"\n",(0,r.jsx)(n.p,{children:"Run the deployment script with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx hardhat run scripts/deploy.js --network push_testnet\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Runs your deployment script"}),"\n",(0,r.jsx)(n.li,{children:"Connects to Push Chain testnet"}),"\n",(0,r.jsx)(n.li,{children:"Uses your private key from the .env file"}),"\n",(0,r.jsx)(n.li,{children:"Deploys your contract and waits for confirmation"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Deployment Results:"})}),"\n",(0,r.jsx)(n.p,{children:"If successful, you'll see output similar to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Deploying MyToken to PUSH Chain...\nMyToken deployed to: 0x0B86e252B035027028C0d4D3B136d80Da4C98Ec1\n"})}),"\n",(0,r.jsx)(n.p,{children:"Save the contract address for verification and interaction."}),"\n",(0,r.jsx)(n.h3,{id:"7-verify-the-contract-1",children:"7. Verify the Contract"}),"\n",(0,r.jsx)(n.p,{children:"Verify your contract on the Push Chain BlockScout explorer:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx hardhat verify --network push_testnet 0x0B86e252B035027028C0d4D3B136d80Da4C98Ec1\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Replace ",(0,r.jsx)(n.code,{children:"0x0B86e252B035027028C0d4D3B136d80Da4C98Ec1"})," with your actual deployed contract address."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," If you encounter issues with verification, you can refer to ",(0,r.jsx)(n.a,{href:"https://docs.blockscout.com/devs/verification/hardhat-verification-plugin",children:"Blockscout's Hardhat verification plugin documentation"})," for troubleshooting."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"When successful, you'll receive a confirmation message with a link to view your verified contract on the Push Chain explorer."}),"\n",(0,r.jsx)(n.p,{children:"That's it! You have successfully deployed and verified your smart contract on Push Chain using Hardhat."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},954537:(e,n,t)=>{t.d(n,{A:()=>a});var r=t(978478),o=t(113490),i=(t(296540),t(474848));const s=e=>{let{title:n="Add to Wallet",config:t}=e;return(0,i.jsx)("div",{style:{display:"flex",justifyContent:"flex-end",alignItems:"center",margin:"20px 0"},children:(0,i.jsx)(o.$n,{onClick:async()=>{try{if("undefined"==typeof window||!window.ethereum)return void alert("Please install MetaMask first!");await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x"+t.chainId.toString(16),chainName:t.chainName,nativeCurrency:t.nativeCurrency,iconUrls:t.iconUrls,rpcUrls:t.rpcUrls,blockExplorerUrls:t.blockExplorerUrls}]})}catch(e){console.error("Error adding network:",e),alert("Failed to add network to MetaMask")}},style:{backgroundColor:"#D548EC",border:"none",padding:"12px 24px",cursor:"pointer",transition:"all 0.2s ease"},children:n})})};function a(e){return(0,i.jsx)(r.A,{children:()=>(0,i.jsx)(s,Object.assign({},e))})}},978478:(e,n,t)=>{t.d(n,{A:()=>i});t(296540);var r=t(992303),o=t(474848);function i(e){let{children:n,fallback:t}=e;return(0,r.A)()?(0,o.jsx)(o.Fragment,{children:null==n?void 0:n()}):null!=t?t:null}}}]);