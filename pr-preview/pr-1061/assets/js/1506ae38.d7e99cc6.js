"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[85232],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var t=i(296540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},119365:(e,n,i)=>{i.d(n,{A:()=>a});i(296540);var t=i(618215);const s={tabItem:"tabItem_Ymn6"};var r=i(474848);function a(e){let{children:n,hidden:i,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,a),hidden:i,children:n})}},303999:(e,n,i)=>{i.d(n,{A:()=>m});var t=i(296540),s=i(618215),r=i(198587),a=i(15066),l=i(992303),c=i(41422);const d={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};var o=i(474848);const h=["summary","children"];function u(e){return!!e&&("SUMMARY"===e.tagName||u(e.parentElement))}function p(e,n){return!!e&&(e===n||p(e.parentElement,n))}function x(e){let{summary:n,children:i}=e,s=(0,r.A)(e,h);const x=(0,l.A)(),j=(0,t.useRef)(null),{collapsed:b,setCollapsed:m}=(0,c.u)({initialState:!s.open}),[v,g]=(0,t.useState)(s.open),f=t.isValidElement(n)?n:(0,o.jsx)("summary",{children:null!=n?n:"Details"});return(0,o.jsxs)("details",Object.assign({},s,{ref:j,open:v,"data-collapsed":b,className:(0,a.A)(d.details,x&&d.isBrowser,s.className),onMouseDown:e=>{u(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const n=e.target;u(n)&&p(n,j.current)&&(e.preventDefault(),b?(m(!1),g(!0)):m(!0))},children:[f,(0,o.jsx)(c.N,{lazy:!1,collapsed:b,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{m(e),g(!e)},children:(0,o.jsx)("div",{className:d.collapsibleContent,children:i})})]}))}const j={details:"details_b_Ee"},b="alert alert--info";function m(e){let n=Object.assign({},(function(e){if(null==e)throw new TypeError("Cannot destructure "+e)}(e),e));return(0,o.jsx)(x,Object.assign({},n,{className:(0,s.A)(b,j.details,n.className)}))}},411470:(e,n,i)=>{i.d(n,{A:()=>C});var t=i(296540),s=i(618215),r=i(823104),a=i(956347),l=i(300205),c=i(757485),d=i(231682),o=i(289466);function h(e){var n,i;return null!==(n=null===(i=t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===i?void 0:i.filter(Boolean))&&void 0!==n?n:[]}function u(e){const{values:n,children:i}=e;return(0,t.useMemo)((()=>{const e=null!=n?n:function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:t,default:s}}=e;return{value:n,label:i,attributes:t,default:s}}))}(i);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,i])}function p(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:i}=e;const s=(0,a.W6)(),r=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=i?i:null}({queryString:n,groupId:i});return[(0,c.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace(Object.assign({},s.location,{search:n.toString()}))}),[r,s])]}function j(e){const{defaultValue:n,queryString:i=!1,groupId:s}=e,r=u(e),[a,c]=(0,t.useState)((()=>function(e){var n;let{defaultValue:i,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(i){if(!p({value:i,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+i+'" but none of its children has the corresponding value. Available values are: '+t.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return i}const s=null!==(n=t.find((e=>e.default)))&&void 0!==n?n:t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[d,h]=x({queryString:i,groupId:s}),[j,b]=function(e){let{groupId:n}=e;const i=function(e){return e?"docusaurus.tab."+e:null}(n),[s,r]=(0,o.Dv)(i);return[s,(0,t.useCallback)((e=>{i&&r.set(e)}),[i,r])]}({groupId:s}),m=(()=>{const e=null!=d?d:j;return p({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{m&&c(m)}),[m]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);c(e),h(e),b(e)}),[h,b,r]),tabValues:r}}var b=i(992303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=i(474848);function g(e){let{className:n,block:i,selectedValue:t,selectValue:a,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),o=e=>{const n=e.currentTarget,i=c.indexOf(n),s=l[i].value;s!==t&&(d(n),a(s))},h=e=>{var n;let i=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{var t;const n=c.indexOf(e.currentTarget)+1;i=null!==(t=c[n])&&void 0!==t?t:c[0];break}case"ArrowLeft":{var s;const n=c.indexOf(e.currentTarget)-1;i=null!==(s=c[n])&&void 0!==s?s:c[c.length-1];break}}null===(n=i)||void 0===n||n.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":i},n),children:l.map((e=>{let{value:n,label:i,attributes:r}=e;return(0,v.jsx)("li",Object.assign({role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>c.push(e),onKeyDown:h,onClick:o},r,{className:(0,s.A)("tabs__item",m.tabItem,null==r?void 0:r.className,{"tabs__item--active":t===n}),children:null!=i?i:n}),n)}))})}function f(e){let{lazy:n,children:i,selectedValue:s}=e;const r=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function T(e){const n=j(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",m.tabList),children:[(0,v.jsx)(g,Object.assign({},e,n)),(0,v.jsx)(f,Object.assign({},e,n))]})}function C(e){const n=(0,b.A)();return(0,v.jsx)(T,Object.assign({},e,{children:h(e.children)}),String(n))}},917858:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>o,toc:()=>u});var t=i(474848),s=i(28453),r=i(411470),a=i(119365),l=i(303999);const c={id:"docs-chain-build-initialize-sdk",title:"Initialize Push Chain SDK",hide_title:!0,slug:"./initialize-chain",displayed_sidebar:"pushChainSidebar",sidebar_position:4,image:"/assets/docs/previews/docs_chain_build_initialize_sdk--initialize_push_chain_sdk.png"},d="Initialize Push Chain SDK Overview",o={id:"chain/build/docs-chain-build-initialize-sdk",title:"Initialize Push Chain SDK",description:"Push Chain is a True Universal Layer 1 Proof of Stake (PoS) blockchain enabling universal applications with seamless interoperability, user-friendly wallet abstractions, and robust shared state architecture.",source:"@site/docs/chain/02-build/04-Develop-Initialize-SDK.mdx",sourceDirName:"chain/02-build",slug:"/chain/build/initialize-chain",permalink:"/push-website/pr-preview/pr-1061/docs/chain/build/initialize-chain",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-website/blob/main/docs/chain/02-build/04-Develop-Initialize-SDK.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"docs-chain-build-initialize-sdk",title:"Initialize Push Chain SDK",hide_title:!0,slug:"./initialize-chain",displayed_sidebar:"pushChainSidebar",sidebar_position:4,image:"/assets/docs/previews/docs_chain_build_initialize_sdk--initialize_push_chain_sdk.png"},sidebar:"pushChainSidebar",previous:{title:"Get Started",permalink:"/push-website/pr-preview/pr-1061/docs/chain/build/get-started"},next:{title:"Initialize Viem SDK",permalink:"/push-website/pr-preview/pr-1061/docs/chain/build/initialize-viem-sdk"}},h={},u=[{value:"Initialize Push Chain API",id:"initialize-push-chain-api",level:2},{value:"Initialize Push Chain parameters",id:"initialize-push-chain-parameters",level:3},{value:"Universal Interface Properties",id:"universal-interface-properties",level:4},{value:"Orchestrator Properties",id:"orchestrator-properties",level:4},{value:"<code>NETWORK</code> Values",id:"network-values",level:4},{value:"<code>CHAIN</code> Values",id:"chain-values",level:4},{value:"Example",id:"example",level:2}];function p(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components},{Head:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"initialize-push-chain-sdk-overview",children:"Initialize Push Chain SDK Overview"}),"\n",(0,t.jsx)(n.p,{children:"Push Chain is a True Universal Layer 1 Proof of Stake (PoS) blockchain enabling universal applications with seamless interoperability, user-friendly wallet abstractions, and robust shared state architecture."}),"\n",(0,t.jsx)(i,{children:(0,t.jsx)("title",{children:"Initialize Push Chain SDK | Push Chain | Push Documentation"})}),"\n","\n","\n",(0,t.jsx)(n.h2,{id:"initialize-push-chain-api",children:"Initialize Push Chain API"}),"\n",(0,t.jsxs)(r.A,{className:"codetabs",groupId:"initialize-push-chain",children:[(0,t.jsx)(a.A,{value:"ethers",attributes:{className:"codetab ethers"},default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// 1. Create ethers Wallet from private key\nconst privateKey = '0x...' // Replace with your actual private key\nconst provider = new ethers.JsonRpcProvider('https://sepolia.gateway.tenderly.co') // Replace with your actual RPC URL\nconst wallet = new ethers.Wallet(privateKey, provider)\n\n// 2. Create universal signer from ethers wallet\nconst signer = await PushChain.utils.signer.toUniversalFromKeyPair(wallet, {\nchain: PushChain.CONSTANTS.CHAIN.ETHEREUM_SEPOLIA,\nlibrary: PushChain.CONSTANTS.LIBRARY.ETHEREUM_ETHERSV6,\n})\n\n// 3. Initialize Push Chain SDK on your preferred network\nconst pushChainClient = await PushChain.initialize(signer, {\nnetwork: PushChain.CONSTANTS.PUSH_NETWORK.TESTNET_DONUT,\n})\n\n"})})}),(0,t.jsx)(a.A,{value:"viem",attributes:{className:"codetab viem"},default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// 1. Create viem account from private key\nconst privateKey = '0x...' // Replace it with your private key\nconst account = privateKeyToAccount(privateKey)\n\n// 2. Create universal signer from viem account\nconst signer = await PushChain.utils.signer.toUniversalFromKeyPair(account, {\n  chain: PushChain.CONSTANTS.CHAIN.ETHEREUM_SEPOLIA,\n  library: PushChain.CONSTANTS.LIBRARY.ETHEREUM_VIEM,\n})\n\n// 3. Initialize Push Chain SDK on your preferred network\nconst pushChainClient = await PushChain.initialize(signer, {\n  network: PushChain.CONSTANTS.PUSH_NETWORK.TESTNET,\n})\n"})})}),(0,t.jsx)(a.A,{value:"solana",attributes:{className:"codetab sol"},children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// 1. Create Solana keypair from private key\nconst privateKeyHex = '...'\nconst privateKey = Uint8Array.from(Buffer.from(privateKeyHex, 'hex'))\nconst account = Keypair.fromSecretKey(privateKey)\n\n// 2. Create universal signer from Solana keypair\nconst signer = await PushChain.utils.signer.toUniversalFromKeyPair(account, {\nchain: PushChain.CONSTANTS.CHAIN.SOLANA_TESTNET,\nlibrary: PushChain.CONSTANTS.LIBRARY.SOLANA_WEB3JS,\n})\n\n// 3. Initialize Push Chain SDK on Testnet for Solana\nconst pushChainClient = await PushChain.initialize(signer, {\nnetwork: PushChain.CONSTANTS.PUSH_NETWORK.TESTNET_DONUT,\n})\n\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"initialize-push-chain-parameters",children:"Initialize Push Chain parameters"}),"\n",(0,t.jsx)(n.p,{children:"When initializing your Push Chain instance, you can customize the process using several parameters. Here's a breakdown:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Param"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Remarks"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.code,{children:"universalSigner"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"UniversalSigner"})}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"Chain-agnostic signer responsible for signing transactions and messages."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options.network"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PUSH_NETWORK"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PushChain.CONSTANTS.PUSH_NETWORK.TESTNET_DONUT"})}),(0,t.jsxs)(n.td,{children:["Push Chain environment. Options: ",(0,t.jsx)(n.code,{children:"MAINNET"}),", ",(0,t.jsx)(n.code,{children:"TESTNET_DONUT"}),", ",(0,t.jsx)(n.code,{children:"LOCALNET"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options.rpcUrls"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Partial<Record<CHAIN, string>>"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"{}"})}),(0,t.jsxs)(n.td,{children:["Custom RPC URLs mapped by chain IDs. If not provided, the default RPC URLs for the network will be used. Example: ",(0,t.jsx)(n.code,{children:"rpcUrls: {[CHAIN.ETHEREUM_SEPOLIA]: 'https://sepolia.infura.io/v3/your-api-key', [CHAIN.SOLANA_DEVNET]: 'https://api.devnet.solana.com'}"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options.printTraces"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"When true, console logs the internal trace logs for debugging requests to nodes"})]})]})]}),"\n",(0,t.jsxs)(l.A,{summary:"Expected response",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"PushChain {\n  orchestartor: Orchestrator {\n    universalSigner: {\n      account: [Object],\n      signMessage: [Function: signMessage],\n      signTransaction: [Function: signTransaction],\n      signTypedData: [Function: signTypedData]\n    },\n    rpcUrls: {\n      'eip155:11155111': [Array],\n      'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z': [Array]\n    },\n    printTraces: false,\n    pushClient: PushClient {\n      publicClient: [Object],\n      pushChainInfo: [Object],\n      signerPrivateKey: '...'\n    }\n  },\n  universal: {\n    origin: [Getter],\n    account: [Getter],\n    sendTransaction: [Function: bound execute]\n  }\n}\n"})}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Remarks"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"orchestartor"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Orchestrator"})}),(0,t.jsx)(n.td,{children:"The core orchestrator that manages the universal signer, RPC configuration, and Push client. Contains universalSigner, rpcUrl settings, printTraces flag, and pushClient instance."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"universal"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Object"})}),(0,t.jsx)(n.td,{children:"High-level interface providing universal blockchain operations including account access, transaction sending, and origin chain information."})]})]})]}),(0,t.jsx)(n.h4,{id:"universal-interface-properties",children:"Universal Interface Properties"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Remarks"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"origin"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Getter"})}),(0,t.jsx)(n.td,{children:"Returns the origin chain address for the universal signer."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"account"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Getter"})}),(0,t.jsx)(n.td,{children:"Returns the UEA address of the universal signer."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sendTransaction"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Function"})}),(0,t.jsx)(n.td,{children:"Bound execute method for cross-chain transaction execution on Push Chain with parameters like target, value, data, gas settings, and deadline."})]})]})]}),(0,t.jsx)(n.h4,{id:"orchestrator-properties",children:"Orchestrator Properties"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Remarks"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"universalSigner"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"UniversalSigner"})}),(0,t.jsx)(n.td,{children:"Chain-agnostic signer containing chain info, address, and signing methods (signMessage, signTransaction, signTypedData)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"rpcUrls"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Object"})}),(0,t.jsxs)(n.td,{children:["RPC URL configuration mapped by chain IDs. Empty object "," when using default URLs."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"printTraces"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Debug flag that controls whether internal trace logs are printed to console."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"pushClient"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PushClient"})}),(0,t.jsx)(n.td,{children:"Internal Push client instance containing publicClient, pushChainInfo, and signer credentials for Push Chain operations."})]})]})]})]}),"\n",(0,t.jsxs)(n.h4,{id:"network-values",children:[(0,t.jsx)(n.code,{children:"NETWORK"})," Values"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"NETWORK"})," enum specifies the Push Chain environment the SDK will connect to. It determines the RPC endpoints, contract addresses, and network context for interacting with Push Chain."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Value"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"MAINNET"})}),(0,t.jsx)(n.td,{children:"Production environment"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"TESTNET_DONUT"})," or ",(0,t.jsx)(n.code,{children:"TESTNET"})]}),(0,t.jsx)(n.td,{children:"Testing environment"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LOCALNET"})}),(0,t.jsx)(n.td,{children:"Local development environment"})]})]})]}),"\n",(0,t.jsxs)(n.h4,{id:"chain-values",children:[(0,t.jsx)(n.code,{children:"CHAIN"})," Values"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"CHAIN"})," enum defines all supported blockchain networks that can be used with Push Chain."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Value"}),(0,t.jsx)(n.th,{children:"Network Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PUSH_MAINNET"})}),(0,t.jsx)(n.td,{children:"Push Chain"}),(0,t.jsx)(n.td,{children:"Push Chain mainnet"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"PUSH_TESTNET_DONUT"})," or ",(0,t.jsx)(n.code,{children:"PUSH_TESTNET"})]}),(0,t.jsx)(n.td,{children:"Push Chain"}),(0,t.jsx)(n.td,{children:"Push Chain testnet"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PUSH_LOCALNET"})}),(0,t.jsx)(n.td,{children:"Push Chain"}),(0,t.jsx)(n.td,{children:"Push Chain local development network"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ETHEREUM_MAINNET"})}),(0,t.jsx)(n.td,{children:"Ethereum"}),(0,t.jsx)(n.td,{children:"Ethereum mainnet"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ETHEREUM_SEPOLIA"})}),(0,t.jsx)(n.td,{children:"Ethereum"}),(0,t.jsx)(n.td,{children:"Ethereum testnet (Sepolia)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"SOLANA_MAINNET"})}),(0,t.jsx)(n.td,{children:"Solana"}),(0,t.jsx)(n.td,{children:"Solana mainnet"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"SOLANA_TESTNET"})}),(0,t.jsx)(n.td,{children:"Solana"}),(0,t.jsx)(n.td,{children:"Solana testnet"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"SOLANA_DEVNET"})}),(0,t.jsx)(n.td,{children:"Solana"}),(0,t.jsx)(n.td,{children:"Solana development network"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:"Here is an example of how to initialize the Push Chain SDK with a universal signer and a custom RPC URL."}),"\n",(0,t.jsx)(r.A,{className:"codetabs",groupId:"code-examples",children:(0,t.jsx)(a.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const pushChainClient = await PushChain.initialize(\n  universalSigner, // Your universal signer instance\n  {\n    network: PushChain.CONSTANTS.PUSH_NETWORK.TESTNET,\n    rpcUrls: {\n      [PushChain.CONSTANTS.CHAIN.ETHEREUM_SEPOLIA]: ['https://sepolia.infura.io/v3/YOUR-PROJECT-ID'],\n      [PushChain.CONSTANTS.CHAIN.SOLANA_TESTNET]: ['https://api.testnet.solana.com'],\n    },\n    printTraces: false,\n  }\n);\n"})})})})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);