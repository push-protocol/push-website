"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[26958],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(296540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},119365:(e,n,t)=>{t.d(n,{A:()=>a});t(296540);var r=t(618215);const s={tabItem:"tabItem_Ymn6"};var i=t(474848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:t,children:n})}},411470:(e,n,t)=>{t.d(n,{A:()=>C});var r=t(296540),s=t(618215),i=t(823104),a=t(956347),o=t(300205),l=t(757485),c=t(231682),d=t(289466);function h(e){var n,t;return null!==(n=null===(t=r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===t?void 0:t.filter(Boolean))&&void 0!==n?n:[]}function u(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=null!=n?n:function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const s=(0,a.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace(Object.assign({},s.location,{search:n.toString()}))}),[i,s])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,i=u(e),[a,l]=(0,r.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const s=null!==(n=r.find((e=>e.default)))&&void 0!==n?n:r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i}))),[c,h]=g({queryString:t,groupId:s}),[x,f]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[s,i]=(0,d.Dv)(t);return[s,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:s}),m=(()=>{const e=null!=c?c:x;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{m&&l(m)}),[m]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);l(e),h(e),f(e)}),[h,f,i]),tabValues:i}}var f=t(992303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(474848);function b(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),s=o[t].value;s!==r&&(c(n),a(s))},h=e=>{var n;let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var r;const n=l.indexOf(e.currentTarget)+1;t=null!==(r=l[n])&&void 0!==r?r:l[0];break}case"ArrowLeft":{var s;const n=l.indexOf(e.currentTarget)-1;t=null!==(s=l[n])&&void 0!==s?s:l[l.length-1];break}}null===(n=t)||void 0===n||n.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,v.jsx)("li",Object.assign({role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:h,onClick:d},i,{className:(0,s.A)("tabs__item",m.tabItem,null==i?void 0:i.className,{"tabs__item--active":r===n}),children:null!=t?t:n}),n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=x(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",m.tabList),children:[(0,v.jsx)(b,Object.assign({},e,n)),(0,v.jsx)(j,Object.assign({},e,n))]})}function C(e){const n=(0,f.A)();return(0,v.jsx)(y,Object.assign({},e,{children:h(e.children)}),String(n))}},543098:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>h,toc:()=>p});var r=t(474848),s=t(28453),i=t(411470),a=t(119365),o=t(954537),l=t(602999);t(113490);const c={id:"docs-chain-setup-tooling-faucet",title:"Faucet",hide_title:!0,slug:"./faucet",displayed_sidebar:"pushChainSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chain_setup_tooling--faucet.png"},d="Faucet to grab testnet $PC",h={id:"chain/setup/tooling/docs-chain-setup-tooling-faucet",title:"Faucet",description:"Learn how to add Push Chain specs to your wallet.",source:"@site/docs/chain/01-setup/01-tooling/02-Faucet.mdx",sourceDirName:"chain/01-setup/01-tooling",slug:"/chain/setup/tooling/faucet",permalink:"/push-website/pr-preview/pr-1061/docs/chain/setup/tooling/faucet",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-website/blob/main/docs/chain/01-setup/01-tooling/02-Faucet.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"docs-chain-setup-tooling-faucet",title:"Faucet",hide_title:!0,slug:"./faucet",displayed_sidebar:"pushChainSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chain_setup_tooling--faucet.png"},sidebar:"pushChainSidebar",previous:{title:"Wallet Setup",permalink:"/push-website/pr-preview/pr-1061/docs/chain/setup/tooling/wallet-setup"},next:{title:"Chain Configuration",permalink:"/push-website/pr-preview/pr-1061/docs/chain/setup/chain-config"}},u={},p=[{value:"Add Push Chain to Wallet",id:"add-push-chain-to-wallet",level:2},{value:"Adding Chain Specs to Wallet",id:"adding-chain-specs-to-wallet",level:3},{value:"Getting Testnet $PC from Faucet",id:"getting-testnet-pc-from-faucet",level:3},{value:"Setup Smart Contract Environment",id:"setup-smart-contract-environment",level:2},{value:"Deploying and Working with Remix",id:"deploying-and-working-with-remix",level:3},{value:"Setup Infrastructure Tooling",id:"setup-infrastructure-tooling",level:2},{value:"Adding Push Chain to Hardhat",id:"adding-push-chain-to-hardhat",level:3},{value:"Adding Push Chain to Foundry",id:"adding-push-chain-to-foundry",level:3},{value:"Using Push Chain from Third Party SDKs",id:"using-push-chain-from-third-party-sdks",level:2},{value:"Accessing Push Chain from Viem",id:"accessing-push-chain-from-viem",level:3},{value:"Accessing Push Chain from Ethers v6",id:"accessing-push-chain-from-ethers-v6",level:3},{value:"Accessing Push Chain from Ethers v5",id:"accessing-push-chain-from-ethers-v5",level:3},{value:"Connect Metamask to Push Chain",id:"connect-metamask-to-push-chain",level:2},{value:"Block Explorer",id:"block-explorer",level:2},{value:"Hardhat Configuration",id:"hardhat-configuration",level:2},{value:"Viem Configuration",id:"viem-configuration",level:2},{value:"Ethers v6 Configuration",id:"ethers-v6-configuration",level:2},{value:"Ethers v5 Configuration",id:"ethers-v5-configuration",level:2}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Head:c}=n;return c||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"faucet-to-grab-testnet-pc",children:"Faucet to grab testnet $PC"}),"\n",(0,r.jsx)(n.p,{children:"Learn how to add Push Chain specs to your wallet."}),"\n",(0,r.jsx)(c,{children:(0,r.jsx)("title",{children:"Wallet Setup | Tooling | Setup | Push Chain | Push Documentation"})}),"\n","\n","\n",(0,r.jsx)(n.h2,{id:"add-push-chain-to-wallet",children:"Add Push Chain to Wallet"}),"\n",(0,r.jsx)(n.h3,{id:"adding-chain-specs-to-wallet",children:"Adding Chain Specs to Wallet"}),"\n",(0,r.jsx)(n.p,{children:"Add the chain specs to your favorite EVM wallet under custom network. Some of the fields are optional depending on the wallet."}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(a.A,{value:"testnet",label:"Testnet - Donut \ud83c\udf69",default:!0,children:[(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Network Name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Push Chain Donut Testnet"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"RPC URL"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"https://evm.rpc-testnet-donut-node1.push.org/"}),", ",(0,r.jsx)(n.code,{children:"https://evm.rpc-testnet-donut-node2.push.org/"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Chain ID"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"42101"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Currency Symbol"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"PC"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Block Explorer URL"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"https://explorer.testnet.push.org"})})]})]})]}),(0,r.jsx)(o.A,{title:"Add to Wallet | Testnet Donut",config:{chainId:42101,chainName:"Push Chain Testnet",nativeCurrency:{name:"Push Chain",symbol:"PC",decimals:18},rpcUrls:["https://evm.rpc-testnet-donut-node1.push.org/","https://evm.rpc-testnet-donut-node1.push.org/"],blockExplorerUrls:["https://explorer.testnet.push.org"]}})]}),(0,r.jsx)(a.A,{value:"mainnet",label:"Mainnet - Coming Soon \ud83d\ude80",children:(0,r.jsxs)(n.admonition,{title:"Coming Soon!",type:"info",children:[(0,r.jsx)(n.p,{children:"Push Chain Mainnet is currently in development. Stay tuned for updates!"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Follow us on ",(0,r.jsx)(n.a,{href:"https://twitter.com/pushprotocol",children:"Twitter"})," for announcements"]}),"\n",(0,r.jsxs)(n.li,{children:["Join our ",(0,r.jsx)(n.a,{href:"https://discord.gg/pushprotocol",children:"Discord"})," to be part of the community"]}),"\n"]})]})})]}),"\n",(0,r.jsx)("hr",{}),"\n",(0,r.jsx)(n.h3,{id:"getting-testnet-pc-from-faucet",children:"Getting Testnet $PC from Faucet"}),"\n",(0,r.jsx)(n.p,{children:"Congrats!! You have successfully added Push Chain to your wallet. Let's get some testnet $PC to play with."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Visit ",(0,r.jsx)(n.a,{href:"https://faucet.push.org/",children:"Push Chain Faucet"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Enter your wallet address and request testnet $PC."}),"\n"]}),"\n",(0,r.jsx)(l.A,{url:"https://faucet.push.org/",buttonTitle:"Load Faucet Page",maxHeight:"500px"}),"\n",(0,r.jsx)(n.h2,{id:"setup-smart-contract-environment",children:"Setup Smart Contract Environment"}),"\n",(0,r.jsx)(n.h3,{id:"deploying-and-working-with-remix",children:"Deploying and Working with Remix"}),"\n",(0,r.jsx)(n.h2,{id:"setup-infrastructure-tooling",children:"Setup Infrastructure Tooling"}),"\n",(0,r.jsx)(n.h3,{id:"adding-push-chain-to-hardhat",children:"Adding Push Chain to Hardhat"}),"\n",(0,r.jsx)(n.h3,{id:"adding-push-chain-to-foundry",children:"Adding Push Chain to Foundry"}),"\n",(0,r.jsx)(n.h2,{id:"using-push-chain-from-third-party-sdks",children:"Using Push Chain from Third Party SDKs"}),"\n",(0,r.jsx)(n.h3,{id:"accessing-push-chain-from-viem",children:"Accessing Push Chain from Viem"}),"\n",(0,r.jsx)(n.h3,{id:"accessing-push-chain-from-ethers-v6",children:"Accessing Push Chain from Ethers v6"}),"\n",(0,r.jsx)(n.h3,{id:"accessing-push-chain-from-ethers-v5",children:"Accessing Push Chain from Ethers v5"}),"\n",(0,r.jsx)(n.h2,{id:"connect-metamask-to-push-chain",children:"Connect Metamask to Push Chain"}),"\n",(0,r.jsx)(n.p,{children:"To interact with Push Chain via MetaMask, add a custom network in MetaMask using the settings below:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Network Name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Push Chain Testnet"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"RPC URL"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"https://evm.pn1.dev.push.org"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Chain ID"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"9000"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Currency Symbol"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"nPUSH"})})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Metamask PushChain Configuration",src:t(957742).A+"",width:"469",height:"714"})}),"\n",(0,r.jsx)(n.h2,{id:"block-explorer",children:"Block Explorer"}),"\n",(0,r.jsxs)(n.p,{children:["To explore the Push Chain blockchain, you can use the ",(0,r.jsx)(n.a,{href:"https://explorer.dev.push.org/",children:"Push Explorer"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"hardhat-configuration",children:"Hardhat Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["To deploy smart contracts to Push Chain using Hardhat, add a custom network entry to your ",(0,r.jsx)(n.code,{children:"hardhat.config"})," file. Below is an example showing only the necessary configuration for the ",(0,r.jsx)(n.code,{children:"pushchain"})," network."]}),"\n",(0,r.jsx)(i.A,{className:"codetabs",groupId:"code-examples",children:(0,r.jsx)(a.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { HardhatUserConfig } from "hardhat/config";\nimport "@nomiclabs/hardhat-waffle";\nimport * as dotenv from "dotenv";\ndotenv.config();\n\nconst config: HardhatUserConfig = {\nsolidity: "0.8.4",\nnetworks: {\npushchain: {\nurl: "https://evm.pn1.dev.push.org",\nchainId: 9000,\naccounts: process.env.PRIVATE_KEY ? [process.env.PRIVATE_KEY] : [],\n},\n},\n};\n\nexport default config;\n\n'})})})}),"\n",(0,r.jsx)(n.h2,{id:"viem-configuration",children:"Viem Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.a,{href:"https://viem.sh/",children:"Viem"})," library to interact with Push Chain just like any other EVM chain. You\u2019ll define Push Chain as a custom chain object and then create a ",(0,r.jsx)(n.code,{children:"PublicClient"}),". Below are TypeScript examples showcasing how to query blocks and transactions."]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["To learn how to connect ",(0,r.jsx)(n.code,{children:"viem"})," to Push Chain, check out the ",(0,r.jsx)(n.a,{href:"/docs/chain/build/initialize-viem-sdk/",children:"Initialize Viem SDK"})," page****."]})}),"\n",(0,r.jsx)(i.A,{className:"codetabs",groupId:"code-examples",children:(0,r.jsx)(a.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { createPublicClient, http } from "viem";\nimport { CONSTANTS } from \'@pushchain/core\'\n\n// 1. Initialize a PublicClient using the HTTP transport\nconst client = createPublicClient({\nchain: CONSTANTS.VIEM_PUSH_TESTNET,\ntransport: http(),\n});\n\n// 2. Fetch the latest block\nasync function getLatestBlock() {\nconst block = await client.getBlock({ blockNumber: "latest" });\nconsole.log("Latest block:", block);\n}\n\n// 3. Fetch a transaction by its hash\nasync function getTransaction(txHash) {\nconst tx = await client.getTransaction({ hash: txHash });\nconsole.log("Transaction:", tx);\n}\n'})})})}),"\n",(0,r.jsx)(n.h2,{id:"ethers-v6-configuration",children:"Ethers v6 Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["To interact with Push Chain using Ethers v6, you can use the ",(0,r.jsx)(n.code,{children:"ethers"})," library to connect to the network and send transactions. Below is an example showing how to connect to Push Chain and send a transaction."]}),"\n",(0,r.jsx)(i.A,{className:"codetabs",groupId:"code-examples",children:(0,r.jsx)(a.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ethers } from 'ethers'\n\n// 1. Initialize a JsonRpcProvider pointing at Push Chain\nconst RPC_URL = 'https://evm.pn1.dev.push.org'\nconst provider = new ethers.JsonRpcProvider(RPC_URL)\n\n// 2. Fetch the latest block\nasync function getLatestBlock() {\ntry {\nconst block = await provider.getBlock('latest')\nconsole.log('Latest block:', block)\n} catch (err) {\nconsole.error('Error fetching latest block:', err)\n}\n}\n\n// 3. Fetch a transaction by its hash\nasync function getTransaction(txHash: string) {\ntry {\nconst tx = await provider.getTransaction(txHash)\nconsole.log('Transaction:', tx)\n} catch (err) {\nconsole.error('Error fetching transaction (v6):', err)\n}\n}\n\n"})})})}),"\n",(0,r.jsx)(n.h2,{id:"ethers-v5-configuration",children:"Ethers v5 Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["To interact with Push Chain using Ethers v5, you can use the ",(0,r.jsx)(n.code,{children:"ethers"})," library to connect to the network and send transactions. Below is an example showing how to connect to Push Chain and send a transaction."]}),"\n",(0,r.jsx)(i.A,{className:"codetabs",groupId:"code-examples",children:(0,r.jsx)(a.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { ethers } from 'ethers'\n\n// 1. Connect to Push Chain\nconst RPC_URL = 'https://evm.pn1.dev.push.org'\nconst provider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\n// 2. Fetch the latest block\nasync function fetchLatestBlock() {\n  const block = await provider.getBlock('latest')\n  console.log('Latest block:', block)\n}\n\n// 3. Fetch a transaction by hash\nasync function fetchTransaction(txHash: string) {\n  const tx = await provider.getTransaction(txHash)\n  console.log('Transaction:', tx)\n}\n"})})})})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},602999:(e,n,t)=>{t.d(n,{A:()=>i});var r=t(296540),s=t(474848);function i(e){let{url:n,buttonTitle:t="Load Interactive Demo",maxHeight:i="600px"}=e;const[a,o]=(0,r.useState)(!0),[l,c]=(0,r.useState)(!1),d=(0,r.useRef)(null);(0,r.useEffect)((()=>{o(!0)}),[n]);return(0,s.jsxs)("div",{style:{display:"flex",flexDirection:"column",width:"100%",height:l?"80vh":"auto",maxHeight:i,backgroundColor:"rgb(40, 42, 54)",borderRadius:"12px",overflow:"hidden",margin:"20px 0"},children:[(0,s.jsx)("style",{children:"\n        @keyframes spin {\n          to { transform: rotate(360deg); }\n        }\n        .loading-spinner {\n          width: 40px;\n          height: 40px;\n          border: 4px solid #f3f3f3;\n          border-top: 4px solid #D548EC;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n        }\n      "}),(0,s.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:"10px",padding:"10px",backgroundColor:"#8d949e"},children:[(0,s.jsx)("div",{style:{flex:1,padding:"8px 12px",backgroundColor:"rgba(0, 0, 0, 0.5)",borderRadius:"12px",color:"#fff",fontSize:"14px",fontFamily:"monospace",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},children:n}),(0,s.jsx)("button",{onClick:()=>{o(!0),d.current&&(d.current.src=n)},style:{display:"flex",alignItems:"center",justifyContent:"center",width:"32px",height:"32px",padding:"6px",backgroundColor:"rgba(0, 0, 0, 0.5)",border:"1px solid rgba(255, 255, 255, 0.2)",borderRadius:"12px",cursor:"pointer",transition:"all 0.2s ease"},onMouseEnter:e=>{e.currentTarget.style.backgroundColor="rgba(255, 255, 255, 0.1)"},onMouseLeave:e=>{e.currentTarget.style.backgroundColor="transparent"},children:(0,s.jsx)("svg",{width:"16",height:"16",viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:(0,s.jsx)("path",{d:"M14 8c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6c1.8 0 3.4.8 4.5 2h-2.5v1h4V1h-1v2.1C11.9 1.8 10 1 8 1 4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7h-1z",fill:"#fff",opacity:"0.8"})})})]}),(0,s.jsx)("div",{style:{position:"relative",flex:1,backgroundColor:"#fff",border:"1px solid rgba(0, 0, 0, 0.1)",borderRadius:"0 0 12px 12px"},children:l?(0,s.jsxs)(s.Fragment,{children:[a&&(0,s.jsx)("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",zIndex:1},children:(0,s.jsx)("div",{className:"loading-spinner"})}),(0,s.jsx)("iframe",{ref:d,src:n,title:"IFrame Content",onLoad:()=>{o(!1)},sandbox:"allow-scripts allow-same-origin allow-forms allow-popups",style:{width:"100%",height:"100%",border:"none"}})]}):(0,s.jsx)("div",{style:{display:"flex",alignItems:"center",justifyContent:"center",padding:"40px 20px"},children:(0,s.jsx)("button",{onClick:()=>c(!0),style:{padding:"12px 24px",fontSize:"16px",backgroundColor:"#D548EC",color:"#fff",border:"none",borderRadius:"12px",cursor:"pointer",transition:"opacity 0.2s ease",opacity:.9},onMouseEnter:e=>{e.currentTarget.style.opacity="1"},onMouseLeave:e=>{e.currentTarget.style.opacity="0.9"},children:t})})})]})}},954537:(e,n,t)=>{t.d(n,{A:()=>o});var r=t(978478),s=t(113490),i=(t(296540),t(474848));const a=e=>{let{title:n="Add to Wallet",config:t}=e;return(0,i.jsx)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center"},children:(0,i.jsx)(s.$n,{onClick:async()=>{try{if("undefined"==typeof window||!window.ethereum)return void alert("Please install MetaMask first!");await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x"+t.chainId.toString(16),chainName:t.chainName,nativeCurrency:t.nativeCurrency,iconUrls:t.iconUrls,rpcUrls:t.rpcUrls,blockExplorerUrls:t.blockExplorerUrls}]})}catch(e){console.error("Error adding network:",e),alert("Failed to add network to MetaMask")}},style:{backgroundColor:"#D548EC",border:"none",padding:"12px 24px",margin:"20px 0 0",cursor:"pointer",transition:"all 0.2s ease"},children:n})})};function o(e){return(0,i.jsx)(r.A,{children:()=>(0,i.jsx)(a,Object.assign({},e))})}},957742:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Metamask-Push-Chain-1526d603e74a4626f75e19f5762826cf.png"},978478:(e,n,t)=>{t.d(n,{A:()=>i});t(296540);var r=t(992303),s=t(474848);function i(e){let{children:n,fallback:t}=e;return(0,r.A)()?(0,s.jsx)(s.Fragment,{children:null==n?void 0:n()}):null!=t?t:null}}}]);