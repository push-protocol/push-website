"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[8551],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(296540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},119365:(e,n,t)=>{t.d(n,{A:()=>i});t(296540);var a=t(618215);const s={tabItem:"tabItem_Ymn6"};var r=t(474848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,i),hidden:t,children:n})}},265287:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=t(474848),s=t(28453),r=t(411470),i=t(119365);t(113490);const o={id:"docs-chain-setup-chain-config",title:"Chain Configuration",hide_title:!0,slug:"./chain-config",displayed_sidebar:"pushChainSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chain_setup_chain_config--chain_configuration.png"},c="Tooling",l={id:"chain/setup/docs-chain-setup-chain-config",title:"Chain Configuration",description:"This section provides an overview of the tooling available for Push Chain developers.",source:"@site/docs/chain/01-setup/02-Chain-Configuration.mdx",sourceDirName:"chain/01-setup",slug:"/chain/setup/chain-config",permalink:"/push-website/pr-preview/pr-1061/docs/chain/setup/chain-config",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-website/blob/main/docs/chain/01-setup/02-Chain-Configuration.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"docs-chain-setup-chain-config",title:"Chain Configuration",hide_title:!0,slug:"./chain-config",displayed_sidebar:"pushChainSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chain_setup_chain_config--chain_configuration.png"},sidebar:"pushChainSidebar",previous:{title:"Faucet",permalink:"/push-website/pr-preview/pr-1061/docs/chain/setup/tooling/faucet"},next:{title:"Local Deployment",permalink:"/push-website/pr-preview/pr-1061/docs/chain/setup/local-deployment"}},h={},u=[{value:"Connect Metamask to Push Chain",id:"connect-metamask-to-push-chain",level:2},{value:"Block Explorer",id:"block-explorer",level:2},{value:"Hardhat Configuration",id:"hardhat-configuration",level:2},{value:"Viem Configuration",id:"viem-configuration",level:2},{value:"Ethers v6 Configuration",id:"ethers-v6-configuration",level:2},{value:"Ethers v5 Configuration",id:"ethers-v5-configuration",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components},{Head:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"tooling",children:"Tooling"}),"\n",(0,a.jsx)(n.p,{children:"This section provides an overview of the tooling available for Push Chain developers."}),"\n",(0,a.jsx)(o,{children:(0,a.jsx)("title",{children:"Chain Configuration | Setup | Push Chain | Push Documentation"})}),"\n","\n","\n",(0,a.jsx)(n.h2,{id:"connect-metamask-to-push-chain",children:"Connect Metamask to Push Chain"}),"\n",(0,a.jsx)(n.p,{children:"To interact with Push Chain via MetaMask, add a custom network in MetaMask using the settings below:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Field"}),(0,a.jsx)(n.th,{children:"Value"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Network Name"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"Push Chain Testnet"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"RPC URL"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"https://evm.pn1.dev.push.org"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Chain ID"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"9000"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Currency Symbol"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"nPUSH"})})]})]})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Metamask PushChain Configuration",src:t(957742).A+"",width:"469",height:"714"})}),"\n",(0,a.jsx)(n.h2,{id:"block-explorer",children:"Block Explorer"}),"\n",(0,a.jsxs)(n.p,{children:["To explore the Push Chain blockchain, you can use the ",(0,a.jsx)(n.a,{href:"https://explorer.dev.push.org/",children:"Push Explorer"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"hardhat-configuration",children:"Hardhat Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["To deploy smart contracts to Push Chain using Hardhat, add a custom network entry to your ",(0,a.jsx)(n.code,{children:"hardhat.config"})," file. Below is an example showing only the necessary configuration for the ",(0,a.jsx)(n.code,{children:"pushchain"})," network."]}),"\n",(0,a.jsx)(r.A,{className:"codetabs",groupId:"code-examples",children:(0,a.jsx)(i.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { HardhatUserConfig } from "hardhat/config";\nimport "@nomiclabs/hardhat-waffle";\nimport * as dotenv from "dotenv";\ndotenv.config();\n\nconst config: HardhatUserConfig = {\nsolidity: "0.8.4",\nnetworks: {\npushchain: {\nurl: "https://evm.pn1.dev.push.org",\nchainId: 9000,\naccounts: process.env.PRIVATE_KEY ? [process.env.PRIVATE_KEY] : [],\n},\n},\n};\n\nexport default config;\n\n'})})})}),"\n",(0,a.jsx)(n.h2,{id:"viem-configuration",children:"Viem Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["Use the ",(0,a.jsx)(n.a,{href:"https://viem.sh/",children:"Viem"})," library to interact with Push Chain just like any other EVM chain. You\u2019ll define Push Chain as a custom chain object and then create a ",(0,a.jsx)(n.code,{children:"PublicClient"}),". Below are TypeScript examples showcasing how to query blocks and transactions."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["To learn how to connect ",(0,a.jsx)(n.code,{children:"viem"})," to Push Chain, check out the ",(0,a.jsx)(n.a,{href:"/docs/chain/build/initialize-viem-sdk/",children:"Initialize Viem SDK"})," page****."]})}),"\n",(0,a.jsx)(r.A,{className:"codetabs",groupId:"code-examples",children:(0,a.jsx)(i.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { createPublicClient, http } from "viem";\nimport { CONSTANTS } from \'@pushchain/core\'\n\n// 1. Initialize a PublicClient using the HTTP transport\nconst client = createPublicClient({\nchain: CONSTANTS.VIEM_PUSH_TESTNET,\ntransport: http(),\n});\n\n// 2. Fetch the latest block\nasync function getLatestBlock() {\nconst block = await client.getBlock({ blockNumber: "latest" });\nconsole.log("Latest block:", block);\n}\n\n// 3. Fetch a transaction by its hash\nasync function getTransaction(txHash) {\nconst tx = await client.getTransaction({ hash: txHash });\nconsole.log("Transaction:", tx);\n}\n'})})})}),"\n",(0,a.jsx)(n.h2,{id:"ethers-v6-configuration",children:"Ethers v6 Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["To interact with Push Chain using Ethers v6, you can use the ",(0,a.jsx)(n.code,{children:"ethers"})," library to connect to the network and send transactions. Below is an example showing how to connect to Push Chain and send a transaction."]}),"\n",(0,a.jsx)(r.A,{className:"codetabs",groupId:"code-examples",children:(0,a.jsx)(i.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { ethers } from 'ethers'\n\n// 1. Initialize a JsonRpcProvider pointing at Push Chain\nconst RPC_URL = 'https://evm.pn1.dev.push.org'\nconst provider = new ethers.JsonRpcProvider(RPC_URL)\n\n// 2. Fetch the latest block\nasync function getLatestBlock() {\ntry {\nconst block = await provider.getBlock('latest')\nconsole.log('Latest block:', block)\n} catch (err) {\nconsole.error('Error fetching latest block:', err)\n}\n}\n\n// 3. Fetch a transaction by its hash\nasync function getTransaction(txHash: string) {\ntry {\nconst tx = await provider.getTransaction(txHash)\nconsole.log('Transaction:', tx)\n} catch (err) {\nconsole.error('Error fetching transaction (v6):', err)\n}\n}\n\n"})})})}),"\n",(0,a.jsx)(n.h2,{id:"ethers-v5-configuration",children:"Ethers v5 Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["To interact with Push Chain using Ethers v5, you can use the ",(0,a.jsx)(n.code,{children:"ethers"})," library to connect to the network and send transactions. Below is an example showing how to connect to Push Chain and send a transaction."]}),"\n",(0,a.jsx)(r.A,{className:"codetabs",groupId:"code-examples",children:(0,a.jsx)(i.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { ethers } from 'ethers'\n\n// 1. Connect to Push Chain\nconst RPC_URL = 'https://evm.pn1.dev.push.org'\nconst provider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\n// 2. Fetch the latest block\nasync function fetchLatestBlock() {\n  const block = await provider.getBlock('latest')\n  console.log('Latest block:', block)\n}\n\n// 3. Fetch a transaction by hash\nasync function fetchTransaction(txHash: string) {\n  const tx = await provider.getTransaction(txHash)\n  console.log('Transaction:', tx)\n}\n"})})})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},411470:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(296540),s=t(618215),r=t(823104),i=t(956347),o=t(300205),c=t(757485),l=t(231682),h=t(289466);function u(e){var n,t;return null!==(n=null===(t=a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===t?void 0:t.filter(Boolean))&&void 0!==n?n:[]}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,l.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const s=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,c.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace(Object.assign({},s.location,{search:n.toString()}))}),[r,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=d(e),[i,c]=(0,a.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const s=null!==(n=a.find((e=>e.default)))&&void 0!==n?n:a[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[l,u]=f({queryString:t,groupId:s}),[g,b]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[s,r]=(0,h.Dv)(t);return[s,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),m=(()=>{const e=null!=l?l:g;return p({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{m&&c(m)}),[m]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);c(e),u(e),b(e)}),[u,b,r]),tabValues:r}}var b=t(992303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(474848);function x(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),h=e=>{const n=e.currentTarget,t=c.indexOf(n),s=o[t].value;s!==a&&(l(n),i(s))},u=e=>{var n;let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{var a;const n=c.indexOf(e.currentTarget)+1;t=null!==(a=c[n])&&void 0!==a?a:c[0];break}case"ArrowLeft":{var s;const n=c.indexOf(e.currentTarget)-1;t=null!==(s=c[n])&&void 0!==s?s:c[c.length-1];break}}null===(n=t)||void 0===n||n.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,v.jsx)("li",Object.assign({role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>c.push(e),onKeyDown:u,onClick:h},r,{className:(0,s.A)("tabs__item",m.tabItem,null==r?void 0:r.className,{"tabs__item--active":a===n}),children:null!=t?t:n}),n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function C(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container",m.tabList),children:[(0,v.jsx)(x,Object.assign({},e,n)),(0,v.jsx)(j,Object.assign({},e,n))]})}function w(e){const n=(0,b.A)();return(0,v.jsx)(C,Object.assign({},e,{children:u(e.children)}),String(n))}},957742:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/Metamask-Push-Chain-1526d603e74a4626f75e19f5762826cf.png"}}]);