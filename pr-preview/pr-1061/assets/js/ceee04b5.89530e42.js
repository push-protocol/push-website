"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[1230],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(296540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},119365:(e,n,t)=>{t.d(n,{A:()=>a});t(296540);var r=t(618215);const s={tabItem:"tabItem_Ymn6"};var i=t(474848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:t,children:n})}},303999:(e,n,t)=>{t.d(n,{A:()=>b});var r=t(296540),s=t(618215),i=t(198587),a=t(15066),o=t(992303),l=t(41422);const c={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};var u=t(474848);const d=["summary","children"];function h(e){return!!e&&("SUMMARY"===e.tagName||h(e.parentElement))}function p(e,n){return!!e&&(e===n||p(e.parentElement,n))}function m(e){let{summary:n,children:t}=e,s=(0,i.A)(e,d);const m=(0,o.A)(),g=(0,r.useRef)(null),{collapsed:v,setCollapsed:b}=(0,l.u)({initialState:!s.open}),[x,f]=(0,r.useState)(s.open),j=r.isValidElement(n)?n:(0,u.jsx)("summary",{children:null!=n?n:"Details"});return(0,u.jsxs)("details",Object.assign({},s,{ref:g,open:x,"data-collapsed":v,className:(0,a.A)(c.details,m&&c.isBrowser,s.className),onMouseDown:e=>{h(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const n=e.target;h(n)&&p(n,g.current)&&(e.preventDefault(),v?(b(!1),f(!0)):b(!0))},children:[j,(0,u.jsx)(l.N,{lazy:!1,collapsed:v,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{b(e),f(!e)},children:(0,u.jsx)("div",{className:c.collapsibleContent,children:t})})]}))}const g={details:"details_b_Ee"},v="alert alert--info";function b(e){let n=Object.assign({},(function(e){if(null==e)throw new TypeError("Cannot destructure "+e)}(e),e));return(0,u.jsx)(m,Object.assign({},n,{className:(0,s.A)(v,g.details,n.className)}))}},411470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(296540),s=t(618215),i=t(823104),a=t(956347),o=t(300205),l=t(757485),c=t(231682),u=t(289466);function d(e){var n,t;return null!==(n=null===(t=r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===t?void 0:t.filter(Boolean))&&void 0!==n?n:[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=null!=n?n:function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,a.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace(Object.assign({},s.location,{search:n.toString()}))}),[i,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,i=h(e),[a,l]=(0,r.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const s=null!==(n=r.find((e=>e.default)))&&void 0!==n?n:r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i}))),[c,d]=m({queryString:t,groupId:s}),[g,v]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[s,i]=(0,u.Dv)(t);return[s,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:s}),b=(()=>{const e=null!=c?c:g;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{b&&l(b)}),[b]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);l(e),d(e),v(e)}),[d,v,i]),tabValues:i}}var v=t(992303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(474848);function f(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),s=o[t].value;s!==r&&(c(n),a(s))},d=e=>{var n;let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var r;const n=l.indexOf(e.currentTarget)+1;t=null!==(r=l[n])&&void 0!==r?r:l[0];break}case"ArrowLeft":{var s;const n=l.indexOf(e.currentTarget)-1;t=null!==(s=l[n])&&void 0!==s?s:l[l.length-1];break}}null===(n=t)||void 0===n||n.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,x.jsx)("li",Object.assign({role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:d,onClick:u},i,{className:(0,s.A)("tabs__item",b.tabItem,null==i?void 0:i.className,{"tabs__item--active":r===n}),children:null!=t?t:n}),n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",b.tabList),children:[(0,x.jsx)(f,Object.assign({},e,n)),(0,x.jsx)(j,Object.assign({},e,n))]})}function w(e){const n=(0,v.A)();return(0,x.jsx)(y,Object.assign({},e,{children:d(e.children)}),String(n))}},611350:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>h});var r=t(474848),s=t(28453),i=t(411470),a=t(119365),o=t(303999);t(113490);const l={id:"docs-create-universal-signer",title:"Create Universal Signer",hide_title:!0,slug:"./create-universal-signer",displayed_sidebar:"pushChainSidebar",sidebar_position:11,image:"/assets/docs/previews/docs--create_universal_signer.png"},c="Create Universal Signer Overview",u={id:"chain/build/docs-create-universal-signer",title:"Create Universal Signer",description:"The Universal Signer is a standardized way to sign messages and transactions across different blockchain libraries and wallets in the Push Protocol Core SDK. It provides a unified interface that abstracts away the complexity of different signing implementations, allowing you to work seamlessly with various wallet providers and blockchain libraries.",source:"@site/docs/chain/02-build/11-Create-Universal-Signer.mdx",sourceDirName:"chain/02-build",slug:"/chain/build/create-universal-signer",permalink:"/push-website/pr-preview/pr-1061/docs/chain/build/create-universal-signer",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-website/blob/main/docs/chain/02-build/11-Create-Universal-Signer.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{id:"docs-create-universal-signer",title:"Create Universal Signer",hide_title:!0,slug:"./create-universal-signer",displayed_sidebar:"pushChainSidebar",sidebar_position:11,image:"/assets/docs/previews/docs--create_universal_signer.png"},sidebar:"pushChainSidebar",previous:{title:"WebSocket",permalink:"/push-website/pr-preview/pr-1061/docs/chain/build/websocket"},next:{title:"UI Components",permalink:"/push-website/pr-preview/pr-1061/docs/chain/ui-components"}},d={},h=[{value:"Create Universal Signer API",id:"create-universal-signer-api",level:2},{value:"Convert Signer Parameters",id:"convert-signer-parameters",level:3},{value:"Construct Custom Universal Signer API",id:"construct-custom-universal-signer-api",level:2},{value:"Construct Signer Parameters",id:"construct-signer-parameters",level:3}];function p(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"create-universal-signer-overview",children:"Create Universal Signer Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Universal Signer is a standardized way to sign messages and transactions across different blockchain libraries and wallets in the Push Protocol Core SDK. It provides a unified interface that abstracts away the complexity of different signing implementations, allowing you to work seamlessly with various wallet providers and blockchain libraries."}),"\n",(0,r.jsx)(t,{children:(0,r.jsx)("title",{children:"Create Universal Signer | Push Chain | Push Documentation"})}),"\n","\n","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"// customPropMinimized='false'\n// Import necessary components from @pushchain/ui-kit\nimport {\n  PushUniversalWalletProvider,\n  PushUniversalAccountButton,\n  CONSTANTS,\n} from '@pushchain/ui-kit';\n\nfunction App() {\n  // Define Wallet Config\n  const walletConfig = {\n    env: CONSTANTS.ENV.DEVNET,\n    login: {\n      email: true,\n      google: true,\n      wallet: {\n        enabled: true,\n      },\n      appPreview: true,\n    },\n    modal: {\n      loginLayout: CONSTANTS.LOGIN.SPLIT,\n      connectedLayout: CONSTANTS.CONNECTED.HOVER,\n      appPreview: true,\n    },\n  };\n\n  // Define Your App Preview\n  const appMetadata = {\n    logoUrl:\n      'https://plus.unsplash.com/premium_photo-1746731481770-08b2f71661d0?q=80&w=2671&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n    title: 'Test App Title',\n    description: 'Test App Description',\n  };\n\n  return (\n    <PushUniversalWalletProvider config={walletConfig} app={appMetadata}>\n      <PushUniversalAccountButton />\n    </PushUniversalWalletProvider>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"create-universal-signer-api",children:"Create Universal Signer API"}),"\n",(0,r.jsx)(n.p,{children:"The most common way to create a Universal Signer is by converting an existing signer from supported libraries (Viem, Ethers, Solana)."}),"\n",(0,r.jsxs)(i.A,{className:"codetabs",groupId:"create-universal-signer",children:[(0,r.jsx)(a.A,{value:"ethers",attributes:{className:"codetab ethers"},default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { PushChain } from '@pushprotocol/core';\nimport { ethers } from 'ethers';\n\n// Create an Ethers signer\nconst provider = new ethers.providers.JsonRpcProvider('...');\nconst ethersSigner = new ethers.Wallet('0x...', provider);\n\n// Convert to Universal Signer\nconst universalSigner = await PushChain.utils.signer.toUniversal(ethersSigner);\n\n"})})}),(0,r.jsx)(a.A,{value:"viem",attributes:{className:"codetab viem"},default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { PushChain } from '@pushprotocol/core';\nimport { createWalletClient, http } from 'viem';\nimport { privateKeyToAccount } from 'viem/accounts';\nimport { mainnet } from 'viem/chains';\n\n// Create a Viem wallet client\nconst account = privateKeyToAccount('0x...');\nconst viemClient = createWalletClient({\n  account,\n  chain: mainnet,\n  transport: http()\n});\n\n// Convert to Universal Signer\nconst universalSigner = await PushChain.utils.signer.toUniversal(viemClient);\n"})})}),(0,r.jsx)(a.A,{value:"solana",attributes:{className:"codetab sol"},children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { PushChain } from '@pushprotocol/core';\nimport { Keypair } from '@solana/web3.js';\n\n// Create a Solana keypair from private key\nconst privateKeyHex = '...'\nconst privateKey = Uint8Array.from(Buffer.from(privateKeyHex, 'hex'));\nconst solanaKeypair = Keypair.fromSecretKey(privateKey);\n\n// Convert to Universal Signer\nconst universalSigner = await PushChain.utils.signer.toUniversal(solanaKeypair);\n\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"convert-signer-parameters",children:"Convert Signer Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Param"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Type"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Remarks"})})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"signer"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"viem.WalletClient | ethers.Wallet | @solana/web3.js.Keypair | UniversalSignerSkeleton"})}),(0,r.jsx)(n.td,{children:"The signer to convert to Universal Signer format"})]})})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Note: Parameters ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"in this style"})})," are mandatory."]}),"\n"]}),"\n",(0,r.jsx)(o.A,{summary:"Expected response",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// UniversalSigner object\n{\n  account: {\n    address: '0x...',\n    chain: 'ethereum_sepolia' // or other supported chains\n  },\n  signMessage: Function,\n  signTransaction: Function,\n  signTypedData: Function\n}\n"})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"construct-custom-universal-signer-api",children:"Construct Custom Universal Signer API"}),"\n",(0,r.jsx)(n.p,{children:"If you don't have a supported library signer or want to create a custom implementation, you can construct a Universal Signer manually."}),"\n",(0,r.jsx)(i.A,{className:"codetabs",groupId:"code-examples",children:(0,r.jsx)(a.A,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { PushChain } from '@pushprotocol/core';\n\n// Define account information\nconst account = {\naddress: '0xeCba9a32A9823f1cb00cdD8344Bf2D1d87a8dd97',\nchain: PushChain.CONSTANTS.CHAIN.ETHEREUM_SEPOLIA\n};\n\n// Define custom signing functions\nconst customSignMessage = async (data) => {\n// Your custom message signing logic\nreturn new Uint8Array([1, 2, 3]);\n};\n\nconst customSignTransaction = async (unsignedTx) => {\n// Your custom transaction signing logic  \n return new Uint8Array([4, 5, 6]);\n};\n\nconst customSignTypedData = async (typedDataArgs) => {\n// Your custom typed data signing logic\nreturn new Uint8Array([7, 8, 9]);\n};\n\n// Step 1: Construct the skeleton\nconst skeleton = PushChain.utils.signer.construct(account, {\nsignMessage: customSignMessage,\nsignTransaction: customSignTransaction,\nsignTypedData: customSignTypedData\n});\n\n// Step 2: Convert to Universal Signer\nconst universalSigner = await PushChain.utils.signer.toUniversal(skeleton);\n\n"})})})}),"\n",(0,r.jsx)(n.h3,{id:"construct-signer-parameters",children:"Construct Signer Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Param"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Type"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Remarks"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"account"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"UniversalAccount"})}),(0,r.jsx)(n.td,{children:"Account information containing address and chain"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"signingFunctions"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Object containing the signing function implementations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"signingFunctions.signMessage"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(data: Uint8Array) => Promise<Uint8Array>"})}),(0,r.jsx)(n.td,{children:"Function to sign raw message data"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"signingFunctions.signTransaction"})})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(unsignedTx: Uint8Array) => Promise<Uint8Array>"})}),(0,r.jsx)(n.td,{children:"Function to sign transaction data"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"signingFunctions.signTypedData"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(params) => Promise<Uint8Array>"})}),(0,r.jsx)(n.td,{children:"Function to sign typed data (EIP-712)"})]})]})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Note: Parameters ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.code,{children:"in this style"})})," are mandatory."]}),"\n"]}),"\n",(0,r.jsx)(o.A,{summary:"Expected response",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// UniversalSignerSkeleton object\n{\n  signerId: 'CustomGeneratedSigner',\n  account: {\n    address: '0xeCba9a32A9823f1cb00cdD8344Bf2D1d87a8dd97',\n    chain: 'ethereum_sepolia'\n  },\n  signMessage: Function,\n  signTransaction: Function,\n  signTypedData: Function\n}\n"})})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);